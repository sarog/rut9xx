<%
local translate= luci.i18n.translate
%>


<%+header%>
<script type="text/javascript" src="<%=resource%>/speedtest.js"></script>
<script type="text/javascript">

var servers = [];
var current_speed = 0;
var last_connection = "";
var counter = 0;
var times_zero = 0;
var speeds = null;
var animation = null;
var status = "none";
var downloadspeed = 0;
var uploadspeed = 0;
var internet =0;

function disable(off_on){
	if(off_on == 0){
		for( r = 1; r <= 4; r++){
			document.getElementById(("button"+r)).disabled = true;
			document.getElementById("button"+r).style.color = '#B8B8B8';
			document.getElementById(("server"+r)).style.color = '#B8B8B8';
		}
		document.getElementById("start").disabled = true;
		document.getElementById("get_servers").disabled = true;
		document.getElementById("restart").disabled = true;
		document.getElementById("start").style.color = '#B8B8B8';
		document.getElementById("get_servers").style.color = '#B8B8B8';
		document.getElementById("restart").style.color = '#B8B8B8';
	}
	if(off_on == 1){
		if(document.getElementById("server1").innerHTML != "Server 1" && document.getElementById("server2").innerHTML != "Server 2"){
			for( r = 1; r <= 4; r++){
				if(document.getElementById("server"+r).innerHTML.indexOf("Server ")){
					document.getElementById(("button"+r)).disabled = false;
					document.getElementById("button"+r).style.color = '#404040';
					document.getElementById(("server"+r)).style.color = '#404040';
				}
			}
		}
		document.getElementById("start").style.color = '#404040';
		document.getElementById("get_servers").style.color = '#404040';
		document.getElementById("restart").style.color = '#404040';
		document.getElementById("start").disabled = false;
		document.getElementById("get_servers").disabled = false;
		document.getElementById("restart").disabled = false;
		}
}

function testing(which_server){
	document.getElementById("err_message").style.display = 'none';
	current_speed = 0;
	downloadspeed = 0;
	uploadspeed = 0;
	counter = 0;
	times_zero = 0;
	internet = 0;
	status = "none";
	Gauge.Collection.get('gauge1').setValue(0);
	document.getElementById('status').style.display = "";
	document.getElementById('restart').type = "hidden";
	document.getElementById('connecting').style.color = '#B8B8B8';
	document.getElementById('ping').style.color = '#B8B8B8';
	document.getElementById('download').style.color = '#B8B8B8';
	document.getElementById('upload').style.color = '#B8B8B8';
	document.getElementById("connecting").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">' + " Connecting to server ...";
	document.getElementById("ping").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">'  + ' ms';
	document.getElementById("download").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">'  + ' Mbits/s';
	document.getElementById("upload").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">' + ' Mbits/s';
	disable(0);
	if (which_server == 10){
		document.getElementById('action').innerHTML = "Selecting best server based on ping ..";
	}
	else {
		document.getElementById('action').innerHTML = "Connecting to server ..";
	}
	XHR.get('/cgi-bin/speedtest', { step: which_server },
		function(x, info){
				if (info.internet === 1){
					if(info.connection.length > 30){
						info.connection = info.connection.substring(0,30) + "...";
					}
					var div = document.getElementById('connecting');
					div.innerHTML = "<b>" + info.connection + "</b>";
					document.getElementById("connecting").style.color = '#404040';
					last_server_name = info.connection;
					div = document.getElementById('ping');
					div.innerHTML = "<b>" + info.ping_to_server + " ms" + "</b>";
					document.getElementById("ping").style.color = '#404040';

					XHR.get('/cgi-bin/speedtest', { step: 0 },
						function(c, download){
								document.getElementById('action').innerHTML = "Testing download speed ..";
								window.clearInterval(animation);
								window.clearInterval(speeds);
								speeds = setInterval(function () {test_speed_meter()}, 2000);
								animation = setInterval(function () {meter_animation()}, 200);
							}
					);
				}
				else {
					error(3);
					return;
				}
			}
	);



}

function test_speed_meter(){
	XHR.get('/cgi-bin/speedtest', { step: 12 },
		function(v, current_internet){

			if (current_internet.current_speed == "-1"){
					clearInterval(speeds);
					clearInterval(animation);
					error(3);
					return;
			}
			current_speed = Number(current_internet.current_speed);
			downloadspeed = Number(current_internet.downloadspeed);
			if (downloadspeed != 0) {

				clearInterval(speeds);
				clearInterval(animation);
				document.getElementById('download').innerHTML = "<b>" + downloadspeed +" Mbits/s" +"</b>";
				document.getElementById("download").style.color = '#404040';
				Gauge.Collection.get('gauge1').setValue(0);

				XHR.get('/cgi-bin/speedtest', { step : 100 },
					function(c, upload){
						document.getElementById('action').innerHTML = "Testing upload speed ..";
						window.clearInterval(animation);
						window.clearInterval(speeds);
						speeds = setInterval(function () {test_up_meter()}, 2000);
						animation = setInterval(function () {meter_animation()}, 200);

					}
				);
			}
		}
	);
}

function test_up_meter(){
	XHR.get('/cgi-bin/speedtest', { step: 13 },
		function(v, current_internet){
			if (current_internet.current_speed == "-1"){
					clearInterval(speeds);
					clearInterval(animation);
					error(3);
					return;
			}
			current_speed = Number(current_internet.current_speed);
			uploadspeed = Number(current_internet.uploadspeed);
			if (uploadspeed != 0) {
				clearInterval(speeds);
				clearInterval(animation);
				document.getElementById('upload').innerHTML = "<b>" + uploadspeed +" Mbits/s" +"</b>";
				document.getElementById("upload").style.color = '#404040';
				Gauge.Collection.get('gauge1').setValue(0);
				document.getElementById('restart').type = "button";
				document.getElementById('status').style.display = "none";
				disable(1);
				return;
			}

		}
	);
}


function error(code){
	document.getElementById('status').style.display = "none";
	document.getElementById("err_message").style.display = 'block';
	Gauge.Collection.get('gauge1').setValue(0);
	disable(1);
	if (code == 0){
		document.getElementById("err_message").innerHTML = "Can't retrieve servers list!";
		for( r = 1; r <= 4; r++){
			document.getElementById('button'+r).style.color = '#B8B8B8';
			document.getElementById("button"+r).disabled = true;
			document.getElementById("server"+r).innerHTML = 'Server '+ r;
			document.getElementById('server'+r).style.color = '#B8B8B8';
		}
	}
	if (code == 1 || code == 2 || code == 3){
		if(code == 1){
			document.getElementById("err_message").innerHTML = "Can't connect to any server!";
		}
		if(code == 2){
			document.getElementById("err_message").innerHTML = "Can't connect to server!";
		}
		if(code == 3){
			document.getElementById("err_message").innerHTML = "Lost internet connection!";
			window.clearInterval(animation);
			window.clearInterval(speeds);
			status = "err";
			XHR.get('/cgi-bin/speedtest', { step: 9 },
			function(x, clean){
			}
			);
		}
		disable(1);
		document.getElementById('connecting').style.color = '#B8B8B8';
		document.getElementById('ping').style.color = '#B8B8B8';
		document.getElementById('download').style.color = '#B8B8B8';
		document.getElementById('upload').style.color = '#B8B8B8';
		document.getElementById("connecting").innerHTML = '-';
		document.getElementById("ping").innerHTML = '- ms';
		document.getElementById("download").innerHTML = '- Mbits/s';
		document.getElementById("upload").innerHTML = '- Mbits/s';
		counter = 0;
		times_zero = 0;
		speeds = null;
		animation = null;
	}

}

function meter_animation(){
		if (current_speed > 95){
			current_speed = 95;
		}
		action = Math.floor((Math.random() * 2) + 1);
		percent = Math.floor((Math.random() * 4) + 1);

		if(action == 1 && percent == 1){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.21);
		}
		if(action == 2 && percent == 1){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.19);
		}
		if(action == 1 && percent == 2){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.22);
		}
		if(action == 2 && percent == 2){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.18);
		}
		if(action == 1 && percent == 3){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.23);
		}
		if(action == 1 && percent == 4){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.24);
		}
		if(action == 2 && percent == 3){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.17);
		}
		if(action == 2 && percent == 4){
			Gauge.Collection.get('gauge1').setValue(current_speed * 2.16);
		}

}

function getservers(){
	disable(0);
	document.getElementById("err_message").style.display = 'none';
	document.getElementById("server1").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">';
	document.getElementById("server2").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">';
	document.getElementById("server3").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">';
	document.getElementById("server4").innerHTML = '<img src="/luci-static/resources/icons/loading.gif" style="width: 10px; height: 10px" alt="Loading">';
	document.getElementById('status').style.display = "";
	document.getElementById('action').innerHTML = "Recieving nearest servers around your location ..";

	XHR.get('/cgi-bin/speedtest', { step: 14 },
		function(v, server_list){
			document.getElementById('status').style.display = "none";

			try{
				if (server_list.internet === 1){
					for (i = 0; i < 4; i++){
						var id = "server" + (i+1).toString();
						var button = "button" + (i+1).toString();
						document.getElementById(id).innerHTML = server_list.servers[i]["sponsor"];
						document.getElementById(button).type = "button";
					}

					disable(1);
				}
				else{
					error(0);
				}
			}
			catch(err){
				location.href=location.href;
				return;
			}
		}
	);
}

</script>

<h2><a id="content" name="content"><%=translate("Speed Test")%></a></h2>
<div id="err_message" class="alert-message error" style="display: none"></div>
<div id="page" >
	<div id="loading" style="display: inline-block"></div>
	<div style="float: right">
	<br>
	<br>
	<br>
</div>

	<canvas id="gauge1" width="200" height="200" style="margin-left: auto;margin-right: auto;display: block;"
		data-type="canv-gauge"
		data-title="Speed"
		data-min-value="0"
		data-max-value="220"
		data-major-ticks="0 20 40 60 80 100"
		data-minor-ticks="4"
		data-stroke-ticks="true"
		data-units="Mbits/s"
		data-value-format="3.2"
		data-glow="true"
		data-animation-delay="10"
		data-animation-duration="200"
		data-animation-fn="bounce"
		data-colors-needle="#373536 #373536"
		data-highlights="0 30 #eee, 30 60 #ccc, 60 90 #aaa, 90 220 #eaa"
                data-onready="Gauge.Collection.get('gauge1').setValue(0);"
	></canvas>
		<div style="height:60px">
			<div id="status" style="display: none;">
			<div id="spinner" style="display:block;width:30px;margin-left:auto;margin-right:auto"> <img src="/luci-static/resources/icons/loading.gif" style="width: 30px; height: 30px" alt="Loading"></div>
			<div id="action" align="center" style="display:block;margin-left:auto;margin-right:auto; width: 35%"></div>
		</div>
	</div>
	<br>
	<br>
	<br>
	<input type="button" value="<%=translate('Begin auto test')%>" class="cbi-button"  style="float: left; margin-right: ; margin-top: -50px; display: block" id="start" onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'Test with best server based on ping')" <="" span="" onclick="HideHint(this);testing(10)">
	<input type="button" value="<%=translate('Get servers list')%>" class="cbi-button" id="get_servers" style="float: right; margin-right: ; margin-top: -50px" onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'Receive nearest servers around your location')" <="" span="" onclick="HideHint(this);getservers()">

        <table id="results" width="10%" cellspacing="1" class="cbi-section-table" style="float:left;width: 47%">
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px"><td style="vertical-align: middle"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'Testing from')" <="" span="" style="color: rgb(64, 64, 64);"><%=translate("Server")%></span></td>  <td style="vertical-align: middle; color: #B8B8B8" id="connecting" width="65%">-</td>
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px"><td style="vertical-align: middle"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'Reaction time of your connection')" <="" span="" style="color: rgb(64, 64, 64);"><%=translate("Ping")%></span></td>                       <td style="vertical-align: middle; color: #B8B8B8" id="ping" width="65%"> -  ms</td>
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px"><td style="vertical-align: middle"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'Your average download speed')" <="" span="" style="color: rgb(64, 64, 64);"><%=translate("Avg. download speed")%></span></td>                       <td style="vertical-align: middle; color: #B8B8B8" id="download" width="65%">-  Mbits/s</td>
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px; border-bottom: 1px solid #DDD"><td style="vertical-align: middle"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'Your average upload speed')" <="" span="" style="color: rgb(64, 64, 64);"><%=translate("Avg. upload speed")%></span></td>  <td style="vertical-align: middle; color: #B8B8B8" id="upload" width="65%">-  Mbits/s</td>
        </table>
	<table id="servers" width="10%" cellspacing="1" class="cbi-section-table" style="float:left;width: 47%; margin-left: 6%">
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px"><td style="vertical-align: middle; color: #B8B8B8" id="server1">Server 1</td>  <td width="25%"><input type="button" value="Begin test" class="cbi-button" style="margin-bottom: 0px; margin-right: 10px; color: #B8B8B8" id="button1" onclick="testing(1)" disabled></td>
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px"><td style="vertical-align: middle; color: #B8B8B8" id="server2" width="75%">Server 2</td>    <td width="25%"><input type="button" value="Begin test" class="cbi-button" style="margin-bottom: 0px; margin-right: 10px;color: #B8B8B8" id="button2" onclick="testing(2)" disabled></td>
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px"><td style="vertical-align: middle; color: #B8B8B8" id="server3"  width="75%">Server 3</td>   <td width="25%; style="vertical-align: middle"><input type="button" value="Begin test" class="cbi-button" style="margin-bottom: 0px; margin-right: 10px ; color: #B8B8B8" id="button3" onclick="testing(3)" disabled></td>
                <tr class="cbi-section-table-row" style="width: 50%; height: 44px; border-bottom: 1px solid #DDD; color: #B8B8B8"><td style="vertical-align: middle" id="server4" width="75%">Server 4</td>    <td width="25%"><input type="button" value="Begin test" class="cbi-button" style="margin-bottom: 0px; vertical-align: middle; margin-right: 10px ; color: #B8B8B8" id="button4" onclick="testing(4)" disabled></td>
        </table>

</div>
<div>

<input type="hidden" value="<%=translate('Test again')%>" class="cbi-button" id="restart" style="float: left; display: block" onclick="testing(5)">

</div>
<%+footer%>
