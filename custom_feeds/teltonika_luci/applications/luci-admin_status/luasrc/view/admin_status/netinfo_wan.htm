<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: index.htm 8408 2012-04-02 22:50:26Z jow $

-%>

<%
	require "luci.fs"
	require "luci.tools.status"
	luci.util   = require "luci.util"
	require "teltonika_lua_functions"
	local ds = require "luci.dispatcher"

	local has_ipv6 = luci.fs.access("/proc/net/ipv6_route")
	local moduleType = luci.util.trim(luci.sys.exec("uci get system.module.type"))
	local ModuleName = luci.util.trim(luci.sys.exec("uci get system.module.name"))
	local uci = require "luci.model.uci".cursor()

	local ntm = require "luci.model.network".init()
	local nw  = require "luci.model.network"
	local bridge_mode = uci:get("network", "ppp", "method")
	local bridge_on = "0"
	local pbridge_on = "0"

	if bridge_mode and bridge_mode == "bridge" then
		bridge_on = "1"
	elseif bridge_mode and bridge_mode == "pbridge" then
		pbridge_on = "1"
	end

	if luci.http.formvalue("status") == "1" then
		local dr4 = luci.sys.net.defaultroute()
		local dr6 = luci.sys.net.defaultroute6()
		local wan, wan6

		if dr4 and dr4.device then
			wan = ntm:get_interface(dr4.device)
			wan = wan and wan:get_network()
		end


		if dr6 and dr6.device then
			wan6 = ntm:get_interface(dr6.device)
			wan6 = wan6 and wan6:get_network()
		end

		local rv = {
			port_stat  = luci.tools.status.switch_status("switch0")
		}
		if wan then

			ifname  = wan:ifname()
			--print(ifname)
			if ifname == 'usb0' then
				ifname = 'WiMAX'
				mac = '-1'
			elseif ifname == 'eth1(wimax)' and moduleType == 'wimax' then
				ifname = 'WiMAX'
				mac = '-1'
			elseif ifname == 'wwan0' or ifname == '3g-ppp' or (ifname == 'eth2' and moduleType == '3g_ppp') or moduleType == '3g' then
				ifname = 'Mobile'
				mac = '-1'
			elseif ifname == 'wlan0' then
				mac = luci.sys.exec("iw dev ".. ifname .." info | grep addr | awk -F ' ' '{print $2}'")
				ifname = 'Wireless'
			else
				mac = luci.sys.exec("ifconfig | grep \"".. ifname .."\" | awk -F ' ' '{print $5}'")
				ifname = 'Wired'
			end
			if ifname ~= 'Wired' then
				local wired_section = get_wan_section("type", "wired")
				if wired_section then
					local wired_enabled = uci:get("network", wired_section, "enabled") or "1"

					if wired_enabled == "1" then
						wan_lan = 1
					else
						wan_lan=0
					end
				end
			else
				wan_lan = 1
			end
			if ifname == 'WiMAX' then
				rv.wan = {
					ipaddr  = nw:wimaxCGICall({ call ="extip" }),
					gwaddr  = '-1',
					netmask = '-1',
					dns     = '-1',
					expires = '-1',
					uptime  = nw:wimaxCGICall({ call ="time" }),
					proto   = wan:proto(),
					ifname  = ifname,
					wan_lan = wan_lan,
					link    = wan:adminlink(),
					mac     = mac
				}
			else
			rv.wan = {
				ipaddr  = wan:ipaddr(),
				gwaddr  = wan:gwaddr(),
				netmask = wan:netmask(),
				dns     = wan:dnsaddrs(),
				expires = wan:expires(),
				uptime  = wan:uptime(),
				proto   = (wan:proto() == "qmi2" and "QMI" or wan:proto()),
				ifname  = ifname,
				wan_lan = wan_lan,
				link    = wan:adminlink(),
				mac     = mac
			}
			end
			----------------
			-- Workaround --
			----------------
			if ModuleName == "TELTONIKA-GCT" and rv.wan.dns[1] == nil then
				rv.wan.dns[1] = luci.sys.exec("head -1 /tmp/resolv.conf.auto | cut -d ' ' -f 2")
				rv.wan.dns[2] = luci.sys.exec("tail -n1 /tmp/resolv.conf.auto | cut -d ' ' -f 2")
			end
		end
		if wan6 then
			rv.wan6 = {
				ip6addr = wan6:ip6addr(),
				gw6addr = wan6:gw6addr(),
				dns     = wan6:dns6addrs(),
				uptime  = wan6:uptime(),
				ifname  = wan6:ifname(),
				link    = wan6:adminlink()
			}
		end

		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end

	local system, model = luci.sys.sysinfo()
-%>

<%+header%>
<script type="text/javascript">

</script>
<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">//<![CDATA[

String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
}
	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

function refreshPage(){
	document.getElementById("refresh").disabled = true;
	XHR.get('<%=luci.dispatcher.build_url("admin", "status", "netinfo", "wan")%>', { status: 1 },
		function(x, info){
			if (x && x.status === 403)
				location.href = location.href;

			var ifc;
			if (info.wan != null) {
				ifc = info.wan;
			}
			if (e = document.getElementById('wimaxError')){
				if(ifc!= null && ifc.ifname == 'WiMAX' && ifc.uptime == '401')
					e.style.display="inline";
			}

			//-----------------------------------------------------------------------------
			//----- Potrt info-------------------------------------------------------------
			//-----------------------------------------------------------------------------
				var tableStart = '<table width="100%" cellspacing="10"><tr>';
				var tableEnd = '</tr></table>';
				var switches = "switch0";
				var ports = info.port_stat[switches];
				var s = '';
				if (ports && ports.length){		//kol portas ir jo ilgis egzistuoja
					for (var j = 2; j <  ports.length; j++){		//ciklas nuo 2, kol 2 maziau uz porto ilgi
						if (ports[j].link){		//jei tai egzistuoja spausdina porta, jei ne nerodo
							if (e = document.getElementById('port'+(j-1))){
								e.src = "<%=resource%>/icons/lan_up.png";
							}
						}else{
							if (e = document.getElementById('port'+(j-1))){
								e.src = "<%=resource%>/icons/lan_down.png";
							}
						}
					}
				}
				if (ifc || (ifc && ifc.ifname != "Wired")){
					if(ifc.wan_lan != 1){
						e = document.getElementById('port4');
						e.src = "<%=resource%>/icons/wan_not_used.png";
					}
				}
				else {
					e = document.getElementById('port4');
					e.src = "<%=resource%>/icons/wan_not_used.png";
				}


			//-----------------------------------------------------------------------------
			//----- Wan status ------------------------------------------------------------
			//-----------------------------------------------------------------------------
			var ss;
			var tableStart = '<table width="100%" cellspacing="10">';
			var tableEnd = '</table>';
			ss = document.getElementById('WAN');
			var s = '';
			if (ifc && ifc.ifname && ifc.proto != "none" && '<%=bridge_on%>' != '1' && '<%=pbridge_on%>' != '1') {
				if (ifc.ifname == 'WiMAX' && '<%=bridge_on%>' != '1' && '<%=pbridge_on%>' != '1'){
					s = String.format(
						'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies through what medium the router is connecting to the internet. This can either be Wired, Mobile or Wi-Fi")%>\')" onmouseout="HideHint(this)" ><%=translate("Interface")%> </td><td>WiMAX</td></tr>' +
						'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies the type of connection. This can be static, DHCP, PPPoE, etc.")%>\')" onmouseout="HideHint(this)" ><%=translate("Type")%> </td><td>DHCP</td></tr>' +
						'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("The IP address that the router uses to connect to the internet")%>\')" onmouseout="HideHint(this)" ><%=translate("IP address")%> </td><td>%s</td></tr>',
						(ifc.ipaddr && ifc.ipaddr != "401" ) ? ifc.ipaddr : '-'
					);
						if (ifc.uptime && ifc.uptime != "401" ){
							s += String.format(
								'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("How long the connection has been successfully maintained")%>\')" onmouseout="HideHint(this)" ><%=translate("Connected")%> </td><td> %T </td></tr>',
								ifc.uptime
							);
						}else if (ifc.uptime == "401"){
							s += String.format(
								'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("How long the connection has been successfully maintained")%>\')" onmouseout="HideHint(this)" ><%=translate("Connected")%> </td><td>%s </td></tr>',
								"-"
							);
						}
				} else {
					s = String.format(
						'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies through what medium the router is connecting to the internet. This can either by Wired, Mobile or Wi-Fi")%>\')" onmouseout="HideHint(this)" ><%=translate("Interface")%> </td><td>%s</td></tr>' +
						'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies the type of connection. This can be static, DHCP, PPPoE, etc.")%>\')" onmouseout="HideHint(this)" ><%=translate("Type")%> </td><td>%s</td></tr>' +
						'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies the IP address that the router uses to connect to the internet")%>\')" onmouseout="HideHint(this)" ><%=translate("IP address")%> </td><td>%s</td></tr>',
						(ifc.ifname) ? ifc.ifname : 'N/A',
						(ifc.proto == 'ncm') ? 'NCM' :(ifc.proto == 'dhcp') ? 'DHCP' : ('<%=has_lte%>' && ifc.ifname == '3g-ppp' ) ? '<%=modelservice%>' :(ifc.proto == 'ndis') ? 'NDIS' : (ifc.proto == '3g') ? 'PPP' : ifc.proto.capitalize(),
						(ifc.ipaddr) ? ifc.ipaddr : '0.0.0.0'
					);
					if (ifc.mac != '-1'){
						s += String.format(
							'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("WAN MAC address")%>\')" onmouseout="HideHint(this)"><%=translate("WAN MAC")%></td><td>%s</td></tr>',
							(ifc.mac) ? ifc.mac : '00:00:00:00:00:00'
						);
					}

					if (ifc.netmask != -1 && ifc.gwaddr != -1){
						s += String.format(
							'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies a mask used to define how large the WAN network is")%>\')" onmouseout="HideHint(this)" ><%=translate("Netmask")%> </td><td>%s</td></tr>' +
							'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Specifies the default gateway, the address where traffic destined for the internet is routed to")%>\')" onmouseout="HideHint(this)" ><%=translate("Gateway")%> </td><td>%s</td></tr>',
								(ifc.netmask && ifc.netmask != ifc.ipaddr) ? ifc.netmask : '255.255.255.255',
								(ifc.gwaddr) ? ifc.gwaddr : '0.0.0.0'
						);
					}

					if (ifc.dns != -1){
						for (var i = 0; i < ifc.dns.length; i++){
							s += String.format(
								'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("Domain name server(s)")%>\')" onmouseout="HideHint(this)" ><%=translate("DNS")%> %d </td><td>%s</td></tr>',
								i + 1, ifc.dns[i]
							);
						}
					}

					if (ifc.expires > -1){
						s += String.format(
							'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("The amount of time before the router\\\'s DHCP lease expires")%>\')" onmouseout="HideHint(this)" ><%=translate("Expires")%> </td><td>%t</td></tr>',
							ifc.expires
						);
					}

						if (ifc.uptime > 0){
							s += String.format(
								'<tr><td width="33%%" onmouseover="ShowHint(this, \'<%=translate("How long the connection has been successfully maintained")%>\')" onmouseout="HideHint(this)" ><%=translate("Connected")%> </td><td>%t </td></tr>',
								ifc.uptime
							);
						}
				}
				ss.innerHTML = tableStart + String.format('%s', s) ;
			} else {
				if ('<%=bridge_on%>' == '1' ){
					s += '<tr><td><em><%=translate("Bridge mode")%></em></td></tr>';
				} else if ('<%=pbridge_on%>' == '1') {
					s += '<tr><td><em><%=translate("Passthrough mode")%></em></td></tr>';
				} else {
					s += '<tr><td><em><%=translate("WAN not connected.")%></em></td></tr>';
				}
				if (ss) {
					ss.innerHTML = tableStart + String.format('%s', s) + tableEnd;
				}
			}
			document.getElementById('refresh').disabled = false;
		}
	);
}
AddWindowOnLoadEvent(refreshPage);

function show(id){
	e = document.getElementById(id);
	if (e && id) {
		if (e.style.display == "none") {
			e.style.display="";
		}
		else
		{
			e.style.display="none";
		}
	}
}
//]]></script>

<h2><a id="content" name="content"><%=translate("WAN Information")%></a></h2>
<fieldset class="cbi-section">
	<legend ><%=translate("WAN")%>
	<div id="wimaxError" style="float:right; display:none;" class="overlayParent" >
		<a href="<%=ds.build_url('admin/system/admin/wimax/')%>" class="wimaxErrorLink"> <%=translate('Invalid WiMAX user password. Please click here to navigate to relevant configuration page')%> </a> &#160;
	</div>
	</legend>
<div id="WAN">
	<table style="width:100%;" cellspacing="10">
		<tr>
				<td colspan="2" id="wan4_s" style="vertical-align:middle;padding: 3px;"><em><%=translate("Collecting data...")%></em></td>
		</tr>
		<% if has_ipv6 then %>
		<tr>
				<td width="33%" style="vertical-align:top"><%=translate("IPv6 WAN Status")%></td>
				<td id="wan6_s" style="vertical-align:middle; padding: 3px"><em><%=translate("Collecting data...")%></em></td>
		</tr>
		<% end %>
	</table>
</div>
</fieldset>
<fieldset class="cbi-section">
	<legend><%=translate("Ports")%></legend>
	<div style=" padding:3px; width:100%; margin-bottom:10px; align:center;">
		<div style="position:relative; margin:auto; background-image:url('<%=resource%>/icons/RUT900_back.png'); background-size: 100%; background-repeat:no-repeat; height: 140px; width:326px;" id="PRT">
			<div style="position:absolute; top: 13px; right: 70px;">
				<div style="float:right;"><img id='port4' width="49px" height="54px" src="<%=resource%>/icons/lan_down.png" /></div>
				<div style="margin-right:0px; float:right;"><img id='port1' width="49px" height="54px" src="<%=resource%>/icons/lan_down.png" /></div>
				<div style="margin-right:0px;float:right;"><img id='port2' width="49px" height="54px" src="<%=resource%>/icons/lan_down.png" /></div>
				<div style="margin-right:0px; float:right;"><img id='port3' width="49px" height="54px" src="<%=resource%>/icons/lan_down.png" /></div>
			</div>
		</div>
	</div>
</fieldset>
<%-
	require "luci.util"
	require "nixio.fs"

	local plugins = nixio.fs.dir(luci.util.libpath() .. "/view/admin_status/index")
	local balancing_enabled = uci:get("load_balancing", "general", "enabled") or "0"

	if plugins then
		local inc
		local name
		for inc in plugins do
			if inc:match("%.htm$") then
				name = inc:gsub("%.htm$", "")

				if name == "multiwan" and luci.tools.status.show_mobile() and balancing_enabled ~= "1" then
					include("admin_status/index/" .. name)
				elseif name == "balancing_status"  and balancing_enabled == "1" then
					include("admin_status/index/" .. name)
				end
			end
		end
	end
-%>
<fieldset class="cbi-section">
    <button id="refresh" class="cbi-button-refresh"  style="float: right;" disabled onClick="refreshPage()"><%=translate("Refresh")%></button>
</fieldset>
<%+footer%>
