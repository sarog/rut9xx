--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -3345,6 +3345,16 @@ static int hostapd_ctrl_iface_get_capabi
 	return -1;
 }
 
+static int hostapd_ctrl_iface_disassociate_all(struct hostapd_data *hapd)
+{
+	struct sta_info *sta;
+
+	for (sta = hapd->sta_list; sta; sta = sta->next) {
+		ap_sta_disassociate(hapd, sta, WLAN_REASON_BSS_TRANSITION_DISASSOC);
+	};
+
+	return 0;
+}
 
 static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 					      char *buf, char *reply,
@@ -3435,6 +3445,9 @@ static int hostapd_ctrl_iface_receive_pr
 	} else if (os_strncmp(buf, "DISASSOCIATE ", 13) == 0) {
 		if (hostapd_ctrl_iface_disassociate(hapd, buf + 13))
 			reply_len = -1;
+	} else if (os_strncmp(buf, "DISASSOCIATE_ALL", 16) == 0) {
+		if (hostapd_ctrl_iface_disassociate_all(hapd))
+			reply_len = -1;
 #ifdef CONFIG_TAXONOMY
 	} else if (os_strncmp(buf, "SIGNATURE ", 10) == 0) {
 		reply_len = hostapd_ctrl_iface_signature(hapd, buf + 10,
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -185,6 +185,20 @@ reload_no_params:
 	return 0;
 }
 
+int hostapd_disassociate_all(struct wpa_supplicant *wpa_s)
+{
+	char *cmd = NULL;
+	char buf[256];
+	size_t len = sizeof(buf);
+	int ret;
+
+	if (asprintf(&cmd, "DISASSOCIATE_ALL") < 0)
+		return -1;
+
+	ret = wpa_ctrl_request(wpa_s->hostapd, cmd, os_strlen(cmd), buf, &len, NULL);
+	free(cmd);
+}
+
 #ifdef CONFIG_WEP
 /* Configure default/group WEP keys for static WEP */
 int wpa_set_wep_keys(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid)
@@ -1067,8 +1081,10 @@ void wpa_supplicant_set_state(struct wpa
 			 */
 			band = wpas_get_bands(wpa_s, NULL);
 
-			if (band != BAND_5_GHZ)
+			if (band != BAND_5_GHZ) {
 				hostapd_reload(wpa_s, wpa_s->current_bss, 0);
+				hostapd_disassociate_all(wpa_s);
+			}
 		}
 		wpa_s->new_connection = 1;
 		wpa_drv_set_operstate(wpa_s, 0);
@@ -6576,6 +6592,7 @@ static int wpa_supplicant_init_iface(str
 	if (wpa_s->hostapd && band != BAND_5_GHZ) {
 		wpa_s->scan_interval = 10;
 		hostapd_reload(wpa_s, wpa_s->current_bss, 1);
+		hostapd_disassociate_all(wpa_s);
 	}
 
 	return 0;
