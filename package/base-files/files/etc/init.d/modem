#!/bin/sh /etc/rc.common

# This script manages modem power states
# (some boot time modem initialization also can be done here)

. /lib/teltonika-functions.sh
. /lib/functions.sh

START=21
STOP=97
WATCHDOG_INHIBIT_FILE="/tmp/watchdog_inhibit"

get_model()
{
	uci get hwinfo.hwinfo.mnf_code | grep -c "RUT90.0\|RUT95.G\|RUT90.2"
}

boot()
{
	echo "modem: inserting USB driver"
	insmod ehci-platform 2>/dev/null
	if [ "$1" != "0" ]; then
		generic_start
	fi
}

generic_start()
{
	echo "modem: starting generic 3G modem"

	#Reset
	/sbin/gpio.sh set MON
	#Power on
	/sbin/gpio.sh clear MRST

	model=`get_model`
	if [ "$model" == "1" ]; then
		sleep 8
		boot "0"
		/usr/sbin/modem_check.sh &
	fi

	echo "0,0" > /tmp/sim1_stats
	echo "0,0" > /tmp/sim2_stats

	return 0
}

generic_stop()
{
	echo "modem: stopping generic 3G modem..."
	model=`get_model`
	touch "$WATCHDOG_INHIBIT_FILE"

	echo "0,0" > /tmp/sim1_stats
	echo "0,0" > /tmp/sim2_stats

	if [ "$model" == "1" ]; then
		# Prevent Telit startup after shutdown command
		/sbin/gpio.sh clear MON
	fi

	if [ "$(gsmctl --shutdown 2>/dev/null)" != "OK" ]; then
		echo "modem: dirty modem reset or shutdown"
	fi

	#Stop processes
	/etc/init.d/gsmd stop

	gpsd=`uci get gps.gpsd.enabled`
	if [ "$gpsd" == "1" ]; then
		/etc/init.d/gpsd stop
	fi
	killall -9 operctl 2>/dev/null

	#Init modem pins
	/sbin/gpio.sh "export" MON
	/sbin/gpio.sh "dirout" MON
	/sbin/gpio.sh "export" MRST
	/sbin/gpio.sh "dirout" MRST
	#/sbin/gpio.sh "export" SIM
	#/sbin/gpio.sh "dirout" SIM

	if [ "$model" != "1" ]; then
		#Reset
		/sbin/gpio.sh clear MON
	fi

	#Power off
	/sbin/gpio.sh set MRST
	usleep 400000
	#Reload USB driver for RUT900 Telit module (fw 0.226 workaround)
	if [ "$model" == "1" ]; then
		echo "modem: removing USB driver"
		rmmod ehci-platform
		killall -9 modem_check.sh 2>/dev/null
	fi
	usleep 400000
	echo "modem: done"
}


start()
{
	generic_start
}

stop()
{
	generic_stop
}
