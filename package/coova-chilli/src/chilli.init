#!/bin/sh /etc/rc.common

START=99
STOP=56
#SERVICE_DAEMONIZE=1
#SERVICE_WRITE_PID=1
#SERVICE_PID_FILE=/var/run/chilli.pid

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/chilli
NAME=chilli
DESC=chilli
CONFIG2=/etc/chilli/config

RETVAL=0

. /usr/share/libubox/jshn.sh
. /lib/functions.sh

if [ -f /etc/default/chilli ] ; then
	. /etc/default/chilli
fi


# test -f $DAEMON || exit 0

main_conf() {
cat <<EOF > $2
include /etc/chilli/$1/main.conf
include /etc/chilli/$1/hs.conf
include /etc/chilli/$1/local.conf

ipup=/etc/chilli/up.sh
ipdown=/etc/chilli/down.sh
EOF
}

wait_for_wifi() {
	json_load "$(/bin/ubus call network.wireless status)"
	json_select "radio0"

	if json_is_a "interfaces" array; then
		local __idx=1
		json_select "interfaces"
		config_load wireless

		while json_is_a "$__idx" object; do
			json_select "$((__idx++))"
			json_get_var ifname ifname
			json_select ".."

			if [ -z "$ifname" ]; then
				return 1
			fi
		done
	fi

	return 0
}

make_config() {
	local ifname section
	local wifi_loaded=1
	local counter=0
	local disabled
	local coova_section=$1
	local hotspotid

	#Laukiame kol pakils wifi
	while [ $wifi_loaded -eq 1 ]; do
		counter=$((counter+1))
		wait_for_wifi
		wifi_loaded=$?
		[ "$wifi_loaded" = "1" ] && logger -t "$NAME" "Waiting for wifi"
		[ $counter -gt 10 ] && return 1
		sleep 1
	done

	json_load "$(/bin/ubus call network.wireless status)"
	json_select "radio0"

	if json_is_a "interfaces" array; then
		local __idx=1

		json_select "interfaces"
		config_load wireless

		while json_is_a "$__idx" object; do
			json_select "$((__idx++))"
			json_get_var section section
			json_get_var ifname ifname
			json_select ".."

			DHCPIF=$ifname

			#config_get hotspotid $section "hotspotid"
			hotspotid=`uci -q get wireless.$section.hotspotid`
			if [ "$coova_section" == "$hotspotid" ]; then
				disabled=`uci -q get wireless.$section.disabled`
				#config_get disabled "$section" "disabled" "0"
				if [ -n "$DHCPIF" ] && [ "$disabled" != "1" ]; then
					export DHCPIF
					CONFIG=/etc/chilli/$DHCPIF/chilli.conf
					logger -t "$NAME" "Config: $CONFIG"
					if [ -e $CONFIG ]; then
						logger -t "$NAME" "Config file $CONFIG exists."
					else
						[ ! -d "$CONFIG" ] && mkdir /etc/chilli/$DHCPIF
						main_conf $DHCPIF $CONFIG
					fi
					return 0
				else
					return 1
				fi
			fi
		done
		return 1
	else
		return 1
	fi
}

# manage_wifi_config(){
#	local wifi_section=`uci -q show wireless | grep $2 | awk -F. '{print $2}'`
#
#	if [ $wifi_section ]; then
#		local network=`uci -q get wireless.$wifi_section.network`
#
#		if [ $network -a "$1" == "1" ]; then
#			uci -q delete wireless.$wifi_section.network
#			uci commit
#			wifi up
#			sleep 4
#		elif [ ! $network ] && [ "$1" == "0" ]; then
#			uci -q set wireless.$wifi_section.network='lan'
#			uci commit
#			wifi up
#			sleep 4
#		fi
#	fi
# }

start_instances() {
	local enabled

	config_get enabled "$1" "enabled" "0"

	if [ "$enabled" == "1" ] ; then
		# manage_wifi_config "1" $1
		logger -t "$NAME" "Starting $DESC: "
		if [ ! -e "/www/hotspot/cgi" ]; then
			ln -s /usr/www/hotspot /www/hotspot/cgi
			ln -s /www/luci-static/ /www/hotspot/luci-static
		fi
		uci -q set uhttpd.hotspot.disabled='0'
		uci commit uhttpd
		# sleep 1
	else
		# manage_wifi_config "0" $1
		logger -t "$NAME" "$DESC disabled by UCI"
		return 1
	fi

	make_config $1
	[ "$?" = "1" ] && {
		logger -t "$NAME" "Config not generated"
		return 1
	}

	. /etc/chilli/functions $1
	check_required
	writeconfig
	radiusconfig

	test ${HS_ADMINTERVAL:-0} -gt 0 && {
	(crontab -l 2>&- | grep -v $0
	    echo "*/$HS_ADMINTERVAL * * * * $0 radconfig"
	    ) | crontab - 2>&-
	}

	start-stop-daemon -S -q -p /var/run/$NAME.$HS_LANIF.pid -x $DAEMON -- -c $CONFIG &
}

start() {
	/usr/sbin/modprobe tun >/dev/null 2>&1
	echo 1 > /proc/sys/net/ipv4/ip_forward
	config_load coovachilli
	config_foreach start_instances "general"
	RETVAL=$?
}

checkrunning() {
	check=`start-stop-daemon -S -x $DAEMON -t`
	if [ x"$check" != x"$DAEMON already running." ] ; then
		start
	fi
}

check_enabled() {
	local enabled
	config_get enabled "$1" "enabled" "0"
	if [ "$enabled" == "1" ] ; then
		RETVAL=0
	fi
}

radconfig() {
	[ -e $MAIN_CONF ] || writeconfig
	radiusconfig
}

restart() {
	stop
	start
	RETVAL=$?
}

stop() {
	/usr/sbin/statistics save >/dev/null 2>&1 &
	crontab -l 2>&- | grep -v $0 | crontab -
	PID_FILES=$(ls /var/run/chilli*.pid 2>/dev/null)
	[ -n "$PID_FILES" ] && {
		for pid_file in $PID_FILES;
		do
			logger -t $NAME "Found pid file $pid_file"
			start-stop-daemon -K -q -p $pid_file -x $DAEMON
			sleep 2 #Kitaip nepasalina visu firewall tisykliu
			[ $? = 0 ] && {
				rm -f $pid_file 2>/dev/null
			}
		done
		sleep 1
	}
	RETVAL=1
	config_load coovachilli
	config_foreach check_enabled "general"
	uci -q set uhttpd.hotspot.disabled="$RETVAL"
	uci commit uhttpd
	rm -f /www/hotspot/cgi
	logger -t $NAME "Stoping $NAME."
}

reload() {
	logger -t $NAME "Reloading $DESC."
	#start-stop-daemon -K -s 1 -q -p \
	#    /var/run/$NAME.$HS_LANIF.pid -x $DAEMON
	restart
}

condrestart() {
	check=`start-stop-daemon -S -x $DAEMON -t`
	if [ x"$check" != x"$DAEMON already running." ] ; then
		restart
		RETVAL=$?
	fi
}

status() {
	status chilli
	RETVAL=$?
}
