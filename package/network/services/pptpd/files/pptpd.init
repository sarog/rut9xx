#!/bin/sh /etc/rc.common
# Copyright (C) 2015 OpenWrt.org

START=60
USE_PROCD=1

BIN=/usr/sbin/pptpd
CONFIG=/var/etc/pptpd.conf
CHAP_SECRETS=/var/etc/pptpd-chap-secrets
DEFAULT=/etc/default/pptpd
OPTIONS=/var/etc/options.pptpd

service_triggers()
{
	procd_add_reload_trigger "pptpd"
}

setup_login() {
	config_get username "$1" username
	config_get password "$1" password
	config_get remoteip "$1" remoteip

	[ -n "${username}" ] || return 0
	[ -n "${password}" ] || return 0

	password=${password//\\/\\\\}
	password=${password//\"/'\"'}

	echo "${username} pptp-server \"${password}\" ${remoteip:-*}" >> $CHAP_SECRETS
}

setup_config() {
	local enabled localip remoteip type idle dns1 dns2

	config_get enabled "$1" enabled 0
	config_get type "$1" type

	[ "$enabled" -eq 0 ] && return 1
	[ "$type" = "server" ] || return 1
	config_get idle "$1" idle
	config_get dns1 "$1" dns1
	config_get dns2 "$1" dns2

	counter=$(( counter + 1 ))

	mkdir -p /var/etc
	cp /etc/pptpd.conf $CONFIG
	cp /etc/ppp/options.pptpd $OPTIONS

	config_get localip "$1" localip
	config_get remoteipstart "$1" start
	config_get remoteipend "$1" limit

	if [ -n "$remoteipstart" ] && [ -n "$remoteipend" ]; then
		remoteip="${remoteipstart}-${remoteipend##*.}"
	else
		config_get remoteip "$1" remoteip
	fi

	[ -n "$localip" ] && echo "localip  $localip" >> $CONFIG
	[ -n "$remoteip" ] && echo "remoteip  $remoteip" >> $CONFIG

	[ -n "$idle" ] && echo "idle $idle" >> $OPTIONS
	[ -n "$dns1" ] && echo "ms-dns $dns1" >> $OPTIONS
	[ -n "$dns2" ] && echo "ms-dns $dns2" >> $OPTIONS

	[ -z "$dns1" ] && [ -z "$dns2" ] && echo "ms-dns $localip" >> $OPTIONS

	return 0
}

start_service() {
	local counter=0
	[ -e "$CHAP_SECRETS" ] && rm -f $CHAP_SECRETS 2>/dev/null

	config_load pptpd
	config_foreach setup_config service
	config_foreach setup_login login

	[ -f $DEFAULT ] && . $DEFAULT
	for m in arc4 sha1_generic slhc crc-ccitt ppp_generic ppp_async ppp_mppe; do
		insmod $m >/dev/null 2>&1
	done

	[ "$counter" -gt 0 ] && {
		procd_open_instance
		procd_set_param command $BIN -c $CONFIG --fg
		procd_close_instance
	}
}

stop_service() {
	instances=$(ps | grep -v grep | grep "options.pptpd" | awk '{print $1}' ORS=' ')
	for inst in $instances; do
		kill $inst
	done
}

reload_service() {
	restart
}

restart_service() {
	restart
}
