<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: index.htm 8408 2012-04-02 22:50:26Z jow $

-%>

<%
	require "luci.fs"
	require "luci.tools.status"
	require "teltonika_lua_functions"
	luci.util   = require "luci.util"
	local function cecho(string)
		luci.sys.call("echo \"" .. string .. "\" >> /tmp/log.log")
	end
	local sys = require "luci.sys"
	local nw  = require "luci.model.network"
	if luci.http.formvalue("status") == "1" then
		local rv
		rv = nw:get_openvpn()
		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)
		return
	end

	local system, model = luci.sys.sysinfo()

	local utl = require "luci.util"
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
	servername = "server"
	clientname = "client"
	pagename = "openvpn"
	openvpn_status = 0
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
	local system, model = luci.sys.sysinfo()
	local devices = {}
	local opevpns = utl.trim(sys.exec("uci show openvpn | grep =openvpn | grep -v 'teltonika_auth_service' | awk -F '.' '{print $2 }' | awk -F '=' '{print $1 }'"))
	a = 0
	for line in opevpns:gmatch("[^\r\n]+") do
		devices[#devices+1] = line
		a = 1
	end
		curdev = luci.dispatcher.context.requestpath
		curdev = curdev[#curdev] ~= pagename and curdev[#curdev] or devices[1]
		if curdev == nil then
			curdev = ""
		end

		is_hexed = utl.trim(sys.exec("uci get openvpn."..curdev..".name_is_hexed 2>/dev/null"))
		if is_hexed and is_hexed == "1" then
			curdev_string = hex_to_string(curdev)
		else
			curdev_string = curdev
		end

		openvpn_type, openvpn_name = curdev_string:match("([^,]+)_([^,]+)")

		local opevpns_enable = utl.trim(sys.exec("uci get openvpn."..curdev..".enable 2>/dev/null"))
		if opevpns_enable == '1' then
			opevpns_enable = "Yes"
		else
			opevpns_enable = "No"
		end

		local auth_mode = utl.trim(sys.exec("uci get openvpn."..curdev.."._auth 2>/dev/null"))

%>
<%+header%>
<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">

String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
}

function refreshPage(){

	document.getElementById("refresh").disabled = true;

	if(<%=luci.http.write_json(curdev)%> != "") {

		XHR.get('<%=luci.dispatcher.build_url("admin", "status", "netinfo", "openvpn" )%>', { status: 1 },
			function(x, info){
				if (x && x.status === 403)
					location.href = location.href;

				var s = '';
				num = info.length;
				if(num != null ){
					var link = <%=luci.http.write_json(curdev)%>;
					var id="";

					for (i = 0; i < num; i++) {
						if(info[i][0][0]==link){
							id = i;
						}
					}
				}

				var is_enabled = <%luci.http.write_json(opevpns_enable)%>

				if (is_enabled == "No" || info[id][0][1] == "Disconnected") {
					document.getElementById('local_row').hidden = true;
					document.getElementById('mask_row').hidden = true;
					document.getElementById('time_row').hidden = true;
				} else if (info[id][0][1] == "Bridge") {
					document.getElementById('local_row').hidden = true;
					document.getElementById('mask_row').hidden = true;
				} else {
					document.getElementById('local_row').hidden = false;
					document.getElementById('mask_row').hidden = false;
					document.getElementById('time_row').hidden = false;
				}

				if (e = document.getElementById('status')) {
					if (is_enabled == "No") {
						e.innerHTML = "Disconnected."
					}
					else {
						(info[id][0][1]) ? e.innerHTML = info[id][0][1] : e.innerHTML = "N/A";
					}
				}
				if (e = document.getElementById('type')) {
					(info[id][0][2]) ? e.innerHTML = info[id][0][2].capitalize() : e.innerHTML = "N/A";
				}
				if (e = document.getElementById('local')) {
					(info[id][0][3]) ? e.innerHTML = info[id][0][3] : e.innerHTML = "N/A";
				}
				if (e = document.getElementById('mask')) {
					(info[id][0][4]) ? e.innerHTML = info[id][0][4] : e.innerHTML = "N/A";
				}

				if (e = document.getElementById('time')) {
					all	 = info[id][0][5];
					d	 = parseInt(all/60/60/24);
					ds	 = parseInt(d*24*60*60);
					h	 = parseInt((all-ds)/60/60);
					hs	 = parseInt(h*60*60);
					m	 = parseInt((all-ds-hs)/60);
					ms	 = parseInt(m*60);
					sec	 = parseInt(all-ds-hs-ms);
					tss	 = String.format('%dh %dm %ds', h, m, sec);

					if(d != 0) {
						tss = String.format('%dd %s', d, tss);
					}

					// Checks for 'Not available in custom configuration mode'
					if (info[id][0][5] == info[id][0][4]) {
						e.innerHTML = info[id][0][4];
					} else {
						(info[id][0][5]) ? e.innerHTML = tss : e.innerHTML = "N/A";
					}
				}

				ss = document.getElementById('openvpn_client_Table');

				if (info[id][0][2] == "server" && is_enabled == "Yes") {
					var tableStart = '<table class="cbi-section-table" width="100%" cellspacing="10">';
					var tableEnd = '</table>';
					if (info[id].length == 1) {
						if (ss != null) {
							ss.innerHTML = '<table width="100%" cellspacing="10"><tr class="cbi-section-table-row"><td><em><%=translate("No connected clients")%></em></td></tr></table>';
						}
					} else {
						if("<%=auth_mode%>" == "skey") {
							if (ss != null) {
								ss.innerHTML = "<br><i>Clients information is not available in static key authentication mode</i>";
							}
						} else {
							var tabletr = '<tr><th width="33%" onmouseover="ShowHint(this, \'<%=translate("Configuration name of the client")%>\')" onmouseout="HideHint(this)"><%=translate("Common Name")%></th>' +
							'<th width="33%" onmouseover="ShowHint(this, \'<%=translate("Public IP address and port (of the client) which is open to connect to OpenVPN server")%>\')" onmouseout="HideHint(this)"><%=translate("Real Address")%></th>' +
							'<th width="15%" onmouseover="ShowHint(this, \'<%=translate("Virtual address which has been given to a client")%>\')" onmouseout="HideHint(this)"><%=translate("Virtual Address")%></th>' +
							'<th width="33%" onmouseover="ShowHint(this, \'<%=translate("Since when connection has been established")%>\')" onmouseout="HideHint(this)"><%=translate("Connection Since")%></th></tr>';
							s = "";

							for (i = 1; i < info[id].length; i++) {
								var dateString = new Date(info[id][i][3]);
								s += String.format('<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>',info[id][i][0].capitalize(),info[id][i][1],info[id][i][2],dateString);
							}
							if (ss != null) {
								ss.innerHTML = tableStart + tabletr + String.format('%s', s) + tableEnd ;
							}
						}
					}
				} else if (info[id][0][2] == "server" && is_enabled == "No") {
					if (ss != null) {
						ss.innerHTML = '<table width="100%" cellspacing="10"><tr class="cbi-section-table-row"><td><em><%=translate("No connected clients")%></em></td></tr></table>';
					}
				}

				document.getElementById('refresh').disabled = false;
			}
	);
} else {
	document.getElementById('type_row').hidden = false;
	document.getElementById('status_row').hidden = true;
	document.getElementById('type_row').hidden = true;
	document.getElementById('local_row').hidden = true;
	document.getElementById('mask_row').hidden = true;
	document.getElementById('time_row').hidden = true;
}
}
AddWindowOnLoadEvent(refreshPage);
</script>

<h2><a id="content" name="content"><%=translate("OpenVPN Information")%></a></h2>
<% if #devices > 0 then %>
	<ul class="cbi-tabmenu">
		<%
		for i=1, #devices do
			name = devices[i]
			is_hexed = utl.trim(sys.exec("uci get openvpn."..name..".name_is_hexed 2>/dev/null"))
			if is_hexed and is_hexed == "1" then %>
			<li class="cbi-tab<%= name == curdev and " | active" or "-disabled" %>"><a href="<%=name%>"><%=string.gsub(hex_to_string(name), "^%l", string.upper) %></a></li>
			<% else %>
			<li class="cbi-tab<%= name == curdev and " | active" or "-disabled" %>"><a href="<%=name%>"><%=string.gsub(name, "^%l", string.upper) %></a></li>
			<% end %>
		<% end %>
	</ul>
<% end %>
<fieldset class="cbi-section">
	<div id="g3BarsShow" class="overlayParent">
		<div class="overlayLegend" id="divtitle"><%=translate("OpenVPN")%></div>
 	</div>
	<table id="3gTable" width="100%" cellspacing="10" class="cbi-section-table">
		<tr class="cbi-section-table-row" id="enabled_row"><td width="33%" onmouseover="ShowHint(this, '<%=translate('OpenVPN enabled')%>')" onmouseout="HideHint(this)"><%=translate("Enabled")%></td><td id="is_enabled"><%=opevpns_enable%></td></tr>
		<tr class="cbi-section-table-row" id="status_row"><td width="33%" onmouseover="ShowHint(this, '<%=translate('OpenVPN\\\'s status')%>')" onmouseout="HideHint(this)"><%=translate("Status")%></td><td id="status"><%: - %></td></tr>
		<tr class="cbi-section-table-row" id="type_row"><td width="33%" onmouseover="ShowHint(this, '<%=translate('A type of OpenVPN instance that has been created')%>')" onmouseout="HideHint(this)"><%=translate("Type")%></td><td	id="type"><%: - %></td></tr>
		<tr class="cbi-section-table-row" id="local_row"><td width="33%" onmouseover="ShowHint(this, '<%=translate('Remote virtual network\\\'s IP address')%>')" onmouseout="HideHint(this)"><%=translate("IP")%></td><td id="local"><%: - %></td></tr>
		<tr class="cbi-section-table-row" id="mask_row"><td width="33%" onmouseover="ShowHint(this, '<%=translate('Remote virtual network\\\'s subnet mask')%>')" onmouseout="HideHint(this)"><%=translate("Mask")%></td><td 	id="mask"><%: - %></td></tr>
		<tr class="cbi-section-table-row" id="time_row"><td width="33%" onmouseover="ShowHint(this, '<%=translate('For how long the connection has been established')%>')" onmouseout="HideHint(this)"><%=translate("Time")%></td><td id="time"><%: - %></td></tr>
<!-- 		<tr class="cbi-section-table-row"><td width="33%"><%=translate("LINE")%></td><td        id="line"><%: - %></td></tr> -->
	</table>
</fieldset>

<% if openvpn_type == servername and auth_mode ~= "skey" then %>
<fieldset>
	<div id="g3BarsShow" class="overlayParent">
		<div class="overlayLegend"><%=translate("Clients Information")%></div>
 	</div>
	<div id="openvpn_client_Table">
		  <table width="100%" cellspacing="10">
			  <tr>
				  <td id="wan4_s" style="vertical-align:middle; padding: 3px"><em><%=translate("Collecting data...")%></em></td>
			  </tr>
		  </table>
	</div>
</fieldset>
<% end %>
<fieldset class="cbi-section">
      <button id="refresh" class="cbi-button-refresh"  style="float: right;" disabled onClick="refreshPage();"><%=translate("Refresh")%></button>
</fieldset>
<%+footer%>
