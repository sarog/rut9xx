<html>
	<head>
		<title><%=luci.sys.hostname()%> -  <%= title and title or translate("Rebooting...")%></title>
		<link rel="stylesheet" type="text/css" media="screen" href="<%=media%>/style.css" />
		<script type="text/javascript" src="/luci-static/resources/spin.js"></script>
		<script type="text/javascript" src="<%=resource%>/xhr.js"></script>
		
	</head>
	<body>
<script type="text/javascript">//<![CDATA[
	var fCount = 0;
	var iDuration = 20;
	var iStep = 2;
	var fDiv = 100 / (iDuration / iStep);
	let lanip = "<%=ip%>";
	let protocol = "<%=protocol%>";
	let port = "<%=port%>";
	var sURL

	function StartUpdate() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "system", "profiles", "set")%>',
            { profile: "<%=profile%>", src_lan: (lanip === self.location.host) ? 1 : 0},
			function(res, data) {
            	if (res.status === 200) {
            	    if (data && data.status === true && data.ip_addr)
                        sURL = protocol + "://" + data.ip_addr + ":" + port;
            	    else
                    	sURL = protocol + "://" + self.location.host + ":" + port;

                    XHR.get('<%=luci.dispatcher.build_url("admin", "system", "profiles", "apply_uci")%>',
                        {step: 3, profile: "<%=profile%>"}, function (x, info) {}
                    );
                    WaitForFinish();
                }
            }
		);
	}

	function WaitForFinish() {
		var iSkip = 0;
		var interval = window.setInterval(function() {
			var img = new Image();
			img.onload = function() {
				window.clearInterval(interval);
				UpdateMsg("bail");
			};
			UpdateMsg();

			if (iStep*iSkip >= 10) {
				img.src = sURL + "<%=resource%>" + "/icons/loading.gif?" + Math.random();
			} else {
				iSkip++;
			}
		}, iStep * 1000);
	}

	function UpdateMsg(sMode) {
		var objElm;
		if (typeof sMode == 'undefined' || sMode == "") {
			if (fCount < 100) {
				fCount = fCount + fDiv;
				if (objElm = document.getElementById("id_progress")) {
					if (fCount >= 100)
						objElm.innerHTML = fCount.toFixed(0) + "% done. " + '<a style="text-decoration: underline;" href=' + sURL + '>Login</a>';
					else
						objElm.innerHTML = fCount.toFixed(0) + "% done";
				}
			}
		} else {
			var interval2 = window.setInterval(function() {
				if (fCount < 100) {
					fCount = fCount + fDiv;
					if (objElm = document.getElementById("id_progress"))
						objElm.innerHTML = fCount.toFixed(0) + "% done";
				} else {
					window.clearInterval(interval2);
					location.href = sURL;
				}
			}, 100);
		}
	}

	window.onload = StartUpdate;
//]]></script>
		<div id="maincontainer" style="overflow:hidden; min-width:940px" >
			<div id="maincontent" class="container">
				<h2><a id="content" name="content">
					<%=translate("Services")%> - <%= title and title or translate("Rebooting...")%></a> <span id="id_progress" style="color: green;">0% done</span>
				</h2>

				<fieldset class="cbi-section">
					<div class="spin_wrapper">
						<div id="spinner"></div>
					</div>
						<p1><%= msg and msg or translate("Changes applied.")%></p1>
						<p2><%=msg1 and msg1 or ""%></p2>
				</fieldset>
					<p3><%=msg2 and msg2 or ""%></p3>
<%+footer%>
<script type="text/javascript">//<![CDATA[
	var opts = {
		lines: 14, // The number of lines to draw
		length: 13, // The length of each line
		width: 5, // The line thickness
		radius: 17, // The radius of the inner circle
		rotate: 0, // The rotation offset
		color: '#000', // #rgb or #rrggbb
		speed: 1.7, // Rounds per second
		trail: 64, // Afterglow percentage
		shadow: false, // Whether to render a shadow
		hwaccel: true, // Whether to use hardware acceleration
		className: 'spinner', // The CSS class to assign to the spinner
		zIndex: 2e9, // The z-index (defaults to 2000000000)
		top: 50, // Top position relative to parent in px
		left: 'auto' // Left position relative to parent in px
	};
	var target = document.getElementById('spinner');
	new Spinner(opts).spin(target);
//]]></script>
