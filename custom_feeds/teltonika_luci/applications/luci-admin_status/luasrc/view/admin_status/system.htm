<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: index.htm 8408 2012-04-02 22:50:26Z jow $

-%>

<%
local sys = require "luci.sys"

	function GetTemperature(IsLTE)
		local sCmd, sBuff
		sCmd = "gsmctl -nc"
		sBuff = luci.util.exec(sCmd)
		local temperature = tonumber(sBuff)
		
		if temperature then
			return tostring(temperature / 10)
		else
			return "N/A "
		end
	end

	require "luci.fs"
	require "luci.tools.status"
	luci.util   = require "luci.util"

	local has_ipv6 = luci.fs.access("/proc/net/ipv6_route")
	local has_dhcp = luci.fs.access("/etc/config/dhcp")
	local has_wifi = luci.fs.stat("/etc/config/wireless")
	      has_wifi = has_wifi and has_wifi.size > 0
	local has_3g   = false
	local has_wimax= false
	local modelOverride = brand(11)--"Teltonika RUT9XX"
	local moduleType = luci.util.trim(luci.sys.exec("uci get -q system.module.type"))
	local moduleVidPid = luci.util.trim(luci.sys.exec("uci get -q system.module.vid"))..":"..luci.util.trim(luci.sys.exec("uci get -q system.module.pid"))
	local product = luci.util.trim(luci.sys.exec("uci get -q hwinfo.hwinfo.mnf_code")) or "-"
	if moduleType == "3g" or moduleType == "3g_ppp" then
		has_3g = true
	end
	if moduleType == "wimax" then
		has_wimax = true
	end

	if moduleVidPid == "12D1:1573" or moduleVidPid == "12D1:15C1" or moduleVidPid == "12D1:15C3" or moduleVidPid == "1BC7:1201" then
		has_lte = true
	end

	product = string.sub(product, 0, 6)
	
	if product == "RUT900" then
		modelOverride = brand(12)--"Teltonika RUT900 3G"
	elseif product == "RUT905" then
		modelOverride = brand(13)--"Teltonika RUT905 3G"
	elseif product == "RUT950" then
		modelOverride = brand(14)--"Teltonika RUT950 LTE"
	elseif product == "RUT955" then
		modelOverride = brand(15)--"Teltonika RUT955 LTE"
	elseif product == "RUT951" then
		modelOverride = brand(16)--"Teltonika RUT951 LTE"
	elseif product == "RUT956" then
		modelOverride = brand(17)--"Teltonika RUT956 LTE"
	else
		modelOverride = "?"
	end
		
	local routername = luci.util.trim(luci.sys.exec("uci get -q system.system.routername"))
	routername = (routername:gsub("^%l", string.upper))
	hostname=luci.util.trim(luci.sys.exec("uci get -q system.system.hostname")) 
	------------
	-- RUT700 --
	------------
	local rutName = luci.util.trim(luci.sys.exec("uci get -q system.system.type"))
	if rutName == "rut700" then
		if has_lte then
			modelOverride = brand(18)--"Teltonika RUT750"
		else
			modelOverride = brand(19)--"Teltonika RUT700"
		end
	end
	
	if luci.http.formvalue("status") == "1" then
		local _, _, memtotal, memcached, membuffers, memfree, _, memavailable = luci.sys.sysinfo()
		local temp	
		
		if has_3g  then
				temp = GetTemperature(has_lte)
		end
			
		local rv = {
			uptime     = luci.sys.uptime(),
			localtime  = os.date("%F, %T"),
			loadavg    = { luci.sys.loadavg() },
			temp    = temp,
			memtotal   = memtotal,
			memcached  = memcached,
			membuffers = membuffers,
			memused    = memtotal - memavailable,
		}
		
		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end

	local system, model = luci.sys.sysinfo()
	
	blver = luci.sys.exec("/sbin/mnf_info blver")
	if blver == "" or blver == "\n" then
		blver = "1.0.0"
	end
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">//<![CDATA[
	function progressbar(v, m)
	{
		var vn = parseInt(v) || 0;
		var mn = parseInt(m) || 100;
		var pc = Math.floor((100 / mn) * vn);

		return String.format(
			'<div style="width:200px; position:relative; top:14px; border: 0px solid black; background-color:#e4e4e4;">' +
				'<div style="background-color:#4078d8; width:%d%%; height:4px">' +
					'<div style="position:absolute; left:0; bottom:5px; text-align:center; font-size:14px; width:100%%; color:#404040;">' +
						'<small>%s / %s (%d%%)</small>' +
					'</div>' +
				'</div>' +
			'</div>', pc, v, m, pc
		);
	}

	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

	
	
	
	XHR.poll(5, '<%=REQUEST_URI%>', { status: 1 },
		function(x, info)
		{
			if (x && x.status === 403)
				location.href = location.href;

			var saDate = info.localtime.split(",");
			var saTime = saDate[1].split(":");
			saDate = saDate[0].split("-");
			
			var dtLocalDateTime = new Date(saDate[0], (saDate[1] - 1), saDate[2], saTime[0], saTime[1], saTime[2]);
			var dtStartupDateTime = new Date(dtLocalDateTime.getTime() - info.uptime * 1000);
			
			if (e = document.getElementById('localtime')){
		
			var datet = info.localtime.split(",");
			e.innerHTML = String.format('%s, %s', datet[0], datet[1]) ;

			}

				all=info.uptime;
				d=parseInt(all/60/60/24);
				ds=parseInt(d*24*60*60);
				h=parseInt((all-ds)/60/60);
				hs=parseInt(h*60*60);
				m=parseInt((all-ds-hs)/60);
				ms=parseInt(m*60);
				sec=parseInt(all-ds-hs-ms);
				tss = String.format("<%=translate('%dd %dh %dm %ds')%>",d, h, m, sec);
			
				
			if (e = document.getElementById('uptime')) {
				var sStartupDateTime = String.format("%s-%s-%s, %s:%s:%s", dtStartupDateTime.getFullYear(), ('0' + (dtStartupDateTime.getMonth() + 1)).slice(-2),
					('0' + dtStartupDateTime.getDate()).slice(-2),  ('0' + dtStartupDateTime.getHours()).slice(-2), ('0' + dtStartupDateTime.getMinutes()).slice(-2),
					('0' + dtStartupDateTime.getSeconds()).slice(-2));
				//e.innerHTML = String.format('%t', info.uptime) + String.format("<%=translate('(since %s)')%>", sStartupDateTime);
				e.innerHTML = tss + String.format("<%=translate(' (since %s)')%>", sStartupDateTime);
			}

			if (e = document.getElementById('loadavg')) {
				var iOneMin = info.loadavg[0] * 100;
				var iFiveMin = info.loadavg[1] * 100;
				var iFifteenMin = info.loadavg[2] * 100;

				if (iOneMin > 100)
					iOneMin = 100;
				
				if (iFiveMin > 100)
					iFiveMin = 100;
				
				if (iFifteenMin > 100)
					iFifteenMin = 100;
					
				e.innerHTML = String.format("<%=translate('1 min: %d%%; 5 mins: %d%%; 15 mins: %d%%')%>", iOneMin, iFiveMin, iFifteenMin);
			}

			if (e = document.getElementById('temp')) {
						if(info.temp){
							e.innerHTML = info.temp + String.fromCharCode(176) + " C";
						}
			
			}
			
			if (e = document.getElementById('memused'))
				e.innerHTML = progressbar(
					info.memused + " kB", info.memtotal + " kB"
				);

			if (e = document.getElementById('memcache'))
				e.innerHTML = progressbar(
					info.memcached + " kB", info.memtotal + " kB"
				);

			if (e = document.getElementById('membuff'))
				e.innerHTML = progressbar(
					info.membuffers + " kB", info.memtotal + " kB"
				);

			if (e = document.getElementById('conns'))
				e.innerHTML = progressbar(info.conncount, info.connmax);


		}
	);
//]]></script>

<h2><a id="content" name="content"><%=translate("System Information")%></a></h2>


<fieldset class="cbi-section">
	<legend><%=translate("System")%></legend>
	<table width="100%" cellspacing="10">
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('Device\\\'s name. Can be changed in System -> Administration')%>')"</span><%=translate("Router name")%></td><td><%=routername or "?"%></td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('Indicates how the router will be seen by other devices on the network. Can be changed in System -> Administration')%>')"</span><%=translate("Host name")%></td><td><%=hostname or "?"%></td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The device\\\'s model name')%>')"</span><%=translate("Router model")%></td><td><%=pcdata(modelOverride or "?")%></td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The router\\\'s current Firmware version')%>')"</span><%=translate("Firmware version")%></td><td><%=luci.sys.exec("cat /etc/version")%></td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The version of the Linux kernel that is currently running on the router')%>')"</span><%=translate("Kernel version")%></td><td><%=luci.sys.exec("uname -r")%></td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The router\\\'s current Bootloader version')%>')"</span><%=translate("Bootloader version")%></td><td><%=blver%></td></tr>
		
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('Device\\\'s current system time. Format [year-month-day, hours:minutes:seconds]')%>')"</span><%=translate("Local device time")%></td><td id="localtime">-</td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('Indicates how much time has passed since the last router start up. Format [days hours minutes seconds (since year-month-day, hours:minutes:seconds)]')%>')"</span><%=translate("Uptime")%></td><td id="uptime">-</td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('Router\\\'s CPU load in the last 1, 5 and 15 minute intervals')%>')"</span><%=translate("Load average")%></td><td id="loadavg">-</td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('Device\\\'s temperature')%>')"</span><%=translate("Temperature")%></td><td id="temp">-</td></tr>
	</table>
</fieldset>
<!--
<fieldset>
	<legend><%=translate("Device Info")%></legend>
	<table width="100%" cellspacing="10">
		<tr><td width="33%"><%=translate("Serial Number")%></td><td><%=luci.sys.exec("uci get -q hwinfo.hwinfo.sernum")%></td></tr>
		<tr><td width="33%"><%=translate("Product Code")%></td><td><%=luci.sys.exec("uci get -q hwinfo.hwinfo.mnf_code")%></td></tr>
		<tr><td width="33%"><%=translate("Batch Number")%></td><td><%=luci.sys.exec("uci get -q hwinfo.hwinfo.batch")%></td></tr>
		<tr><td width="33%"><%=translate("Hardware Revision")%></td><td><%=luci.sys.exec("uci get -q hwinfo.hwinfo.hwver")%></td></tr>
	</table>
</fieldset>
-->

<fieldset class="cbi-section">
	<legend><%=translate("Memory")%></legend>

	<table width="100%" cellspacing="10">
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The amount of random-access memory that is completely free')%>')"style="color:rgb(64, 64, 64);"><%=translate("Used")%></span> </td><td id="memused">-</td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The amount of random-access memory that is allocated for a frequently accessed data storage')%>')"style="color:rgb(64, 64, 64);"><%=translate("Cached")%></span> </td><td id="memcache">-</td></tr>
		<tr><td width="33%"><span onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=translate('The amount of random-access memory in which data is temporarily stored before moving it to another location')%>')"style="color:rgb(64, 64, 64);"><%=translate("Buffered")%></span> </td><td id="membuff">-</td></tr>
	</table>
</fieldset>


<%+footer%>
