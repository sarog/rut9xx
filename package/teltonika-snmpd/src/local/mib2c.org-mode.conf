@define object@
******* ${objecttodo}$o ($o.subid)
      + OID:  	$o.objectID
      + Type: 	$o.perltype
      + Access: $o.access
      + Status: $o.status
@if $o.ranges@
      + Ranges
@foreach $start, $end range $o@
        $start - $end
@end@
@end@
@if $o.enums@
********* Enums
@foreach $label, $value enum@
        $value:  $label
@end@
@end@
********* Description
        $o.description
@enddefine@
##
@open -@
We're about to generate an Emacs org-mode file for you.  First, though,
a couple of quick questions:

@prompt $dotodo Do you want us to put TODO labels on the tables (y/n):@
@if "$dotodo" eq "y"@
@eval $tabletodo = "TODO "@
@end@

@prompt $dotodo Do you want us to put TODO labels on the notifications (y/n):@
@if "$dotodo" eq "y"@
@eval $notificationtodo = "TODO "@
@end@

What about objects, such as table columns and notification varbinds?
@prompt $dotodo Do you want us to put TODO labels on these objects (y/n):@
@if "$dotodo" eq "y"@
@eval $objecttodo = "TODO "@
@end@
##
@open ${name}.org@
MIB Information for $name.module::$name

This file was created with /mib2c -c mib2c.org-mode.conf $name/

* Scalars
@foreach $o scalar@
@calldefine object@
@end@
* Tables
@foreach $t table@
*** ${tabletodo}$t ($t.objectID)
***** Description
      $t.description
***** Indexes:
@foreach $o index@
@calldefine object@
@end@
***** Columns:
@foreach $o nonindex@
@calldefine object@
@end@
@end@
* Notifications
@foreach $n notifications@
*** Description
    $n.description
*** ${notificationtodo}$n ($n.objectID)
@foreach $o varbinds@
@calldefine object@
@end@
@end@
