#!/bin/sh
[ -z "$1" ] && echo "Error: should be run by queqtel-CM" && exit 1

. /lib/functions.sh
. /lib/netifd/netifd-proto.sh

dd() {
	logger -t "MOBOLE.SCRIPT" "$1"
}

connection_up() {
	local ifname=$1
	local config=$2
	local action=$3
	local notify=$4

	local options method
	local $PROTO_DEFAULT_OPTIONS
	local zone

	json_init
	json_add_string config "network"
	json_add_string section "$config"
	json_add_string type "interface"
	options=$(ubus call uci get "$(json_dump)")

	json_load "$options"
	json_select "values"
	json_get_vars method $PROTO_DEFAULT_OPTIONS

	proto_set_available "$config" 1

	proto_init_update "$ifname" $action $notify
	proto_send_update "$config"

	#Fix for qmi_wwan driver. It do not bring interface up after modem reboot.
	ifconfig $ifname up

	json_init
	json_add_string name "${config}_4"
	json_add_string ifname "@$config"
	json_add_string proto "dhcp"
	json_add_string script "/lib/netifd/dhcp_mobile.script"
	proto_add_dynamic_defaults
	zone="$(fw3 -q network "$config" 2>/dev/null)"
	[ -n "$zone" ] && {
		json_add_string zone "$zone"
	}
	json_close_object
	ubus call network add_dynamic "$(json_dump)"

	#workaround to check if "${config}_4" set as available. If not set it down and creates new one.
	options=$(ifstatus "${config}_4")
	json_load "$options"
	json_get_vars available available

	if [ "$available" != "1" ]; then
		proto_init_update "$ifname" 0 0
		proto_send_update "$config"
	fi
	[ -n "$MTU" ] && {
		echo "Setting MTU to $MTU"
		ip link set dev "$ifname" mtu "$MTU"
	}

}

connection_down() {
	local ifname=$1
	local config=$2
	local action=$3

	proto_init_update "*" $action $3
	proto_send_update "$config"
}


action=$1
ifname=$2
config=$3

case "$1" in
	up)
		connection_up $ifname $config 1 1
		;;
	down)
		connection_down $ifname $config 0 0
		;;
	   *)
		echo "Wrong parameters"
		;;
esac

exit 0
