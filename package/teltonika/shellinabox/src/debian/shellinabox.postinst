#!/bin/sh
# postinst script for shellinabox
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
      if ! getent passwd shellinabox >/dev/null; then
        adduser --disabled-password  --quiet --system \
          --home /var/lib/shellinabox --gecos "Shell In A Box" \
          --group shellinabox
      fi
	# Shellinabox must own the certificate directory so that it
	# can write the certificate even when the daemon has given-up
	# root privileges.
#      chown shellinabox:shellinabox /var/lib/shellinabox

      # new install, enable all options
      if [ -z "$2" ]; then
         (cd /etc/shellinabox/options-enabled; ln -s ../options-available/*.css .)
      # upgrade from <= v2.14, re-enable saved options
      elif [ -d /etc/shellinabox/options-enabled-save ]; then
         mv /etc/shellinabox/options-enabled-save/*.css /etc/shellinabox/options-enabled
         rm -r /etc/shellinabox/options-enabled-save
      fi
      # future upgrades: no-op
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
