<%#
LuCI - Lua Configuration Interface
Copyright 2010 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: diagnostics.htm 6770 2011-01-20 12:49:42Z jow $

-%>
<%
local uci = require "luci.model.uci".cursor()
local sys = require "luci.sys"
local operator = luci.util.trim(luci.sys.exec("gsmctl -o")) or "N/A"
if operator == "" then
	operator = "N/A"
elseif operator == "gsmctl.c: error parsing output" then
	operator = "N/A"
elseif operator == "gsmctl error: parsing output" then
	operator = "N/A"
elseif operator == "gsmctl error: sim failure" then
	operator = "N/A"
end

	local sim_use = luci.util.trim(luci.sys.exec("/sbin/gpio.sh get SIM"))
	local uci_sim_use
		if sim_use == "-1" then
			sim_use = "SIM 1"
			uci_sim_use = "sim1"
		elseif sim_use == "1" then
			sim_use = "SIM 1"
			uci_sim_use = "sim1"
		elseif sim_use == "0" then
			sim_use = "SIM 2"
			uci_sim_use = "sim2"
		end

		--sys.call("echo \"" .. operator .. "\" >> /tmp/test.txt")
	local simcv = uci:get("simcard", "sim1", "numeric")
	local simcd = uci:get("simcard", "sim2", "numeric")
	local simcv_mode = uci:get("simcard", "sim1", "mode")
	local simcd_mode = uci:get("simcard", "sim2", "mode")
%>
<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">
	var stxhr = new XHR();
	var interval;
	var SIMtab;
	var SIMactive = "<%=sim_use %>";
	if (SIMactive == "SIM 1")
		SIMtab=0;
	else
		SIMtab=1;
	var sim1 = "<%=simcv %>";
	var sim2 = "<%=simcd %>";
	var sim1mode = "<%=simcv_mode %>";
	var sim2mode = "<%=simcd_mode %>";
	var mode_scan=0;
	var manualintv;

	function set_active(e){
		var s;
		var active_sim = e.id;
		if (e.parentNode&&e.parentNode.id)
			var pid=e.parentNode.id;
		if (pid == "tab.simcard.sim1.primarytab"){
			if( e.parentNode.className != "cbi-tab active"){
				e.parentNode.className = "cbi-tab active";
				document.getElementById("tab.simcard.sim1.secondarytab").className = "cbi-tab-disabled";
				document.getElementById("sim1primary").className = "custom_link_active";
				document.getElementById("sim2secondary").className = "custom_link";
				if( SIMactive == "SIM 1" ){
					document.getElementById("scanBtn").disabled = false;
					document.getElementById("scanBtn").style = "font-weight: normal; margin-right: 20px;  cursor: pointer;";
					document.getElementById("diag-rc-output").style.display = "";
					s = '<span id="cbi-apply-system-status"><%=translate("Registering...")%></span>';
					s += '<img src="/luci-static/resources/icons/loading.gif" alt="Loading">';
					document.getElementById("applyConnection").innerHTML = String.format('%s', s);
				}
				else{
					document.getElementById("scanBtn").disabled = true;
					document.getElementById("scanBtn").style = "font-weight: normal; margin-right: 20px; color: #B8B8B8; cursor: default;";
					document.getElementById("diag-rc-output").style.display = "none";
					s = '<span id="cbi-apply-system-status"><%=translate("Saving...")%></span>';
					s += '<img src="/luci-static/resources/icons/loading.gif" alt="Loading">';
					document.getElementById("applyConnection").innerHTML = String.format('%s', s);
				}
			}
			//console.log("sim1mode:"+sim1mode+"sim1: "+sim1);
			if(sim1 != ""){
				if (sim1mode == "Manual-Auto"){
					document.getElementById("manual_con").style.display="inline";
					document.getElementById("auto_con").style.display="none";
					document.getElementById("manual_auto_connection").selected="selected";
					document.getElementById("num_operator").value=sim1;
				}
				else{
					document.getElementById("manual_con").style.display="inline";
					document.getElementById("auto_con").style.display="none";
					document.getElementById("manual_connection").selected="selected";
					document.getElementById("num_operator").value=sim1;
				}

			}
			else{
				document.getElementById("auto_con").style.display="inline";
				document.getElementById("manual_con").style.display="none";
				document.getElementById("auto_connection").selected="selected";
			}

		}
		else {
			if( e.parentNode.className != "cbi-tab active"){
				e.parentNode.className = "cbi-tab active";
				document.getElementById("tab.simcard.sim1.primarytab").className = "cbi-tab-disabled";
				document.getElementById("sim1primary").className = "custom_link";
				document.getElementById("sim2secondary").className = "custom_link_active";
				if( SIMactive == "SIM 2" ){
					document.getElementById("scanBtn").disabled = false;
					document.getElementById("scanBtn").style = "font-weight: normal; margin-right: 20px; cursor: pointer;";
					document.getElementById("diag-rc-output").style.display = "";
					s = '<span id="cbi-apply-system-status"><%=translate("Registering...")%></span>';
					s += '<img src="/luci-static/resources/icons/loading.gif" alt="Loading">';
					document.getElementById("applyConnection").innerHTML = String.format('%s', s);
				}
				else{
					document.getElementById("scanBtn").disabled = true;
					document.getElementById("scanBtn").style = "font-weight: normal; margin-right: 20px; color: #B8B8B8; cursor: default;";
					document.getElementById("diag-rc-output").style.display = "none";
					s = '<span id="cbi-apply-system-status"><%=translate("Saving...")%></span>';
					s += '<img src="/luci-static/resources/icons/loading.gif" alt="Loading">';
					document.getElementById("applyConnection").innerHTML = String.format('%s', s);
				}
			}
			//console.log("sim1mode:"+sim2mode+"sim1: "+sim2);
			if(sim2 != ""){
				if (sim2mode == "Manual-Auto"){
					document.getElementById("manual_con").style.display="inline";
					document.getElementById("auto_con").style.display="none";
					document.getElementById("manual_auto_connection").selected="selected";
					document.getElementById("num_operator").value=sim2;
				}
				else{
					document.getElementById("manual_con").style.display="inline";
					document.getElementById("auto_con").style.display="none";
					document.getElementById("manual_connection").selected="selected";
					document.getElementById("num_operator").value=sim2;
				}
			}
			else{
				document.getElementById("auto_con").style.display="inline";
				document.getElementById("manual_con").style.display="none";
				document.getElementById("auto_connection").selected="selected";

			}
		}
	}

	function hide_element(value){
		var auto = document.getElementById("auto_con");
		var manual = document.getElementById("manual_con");
		var e = document.getElementById("connection_mode");
		e.value=value;
		if (value == "manual" || value == "manual/auto"){
			auto.style.display="none";
			manual.style.display="inline";
			document.getElementById("num_operator").value = sim1;
			if (SIMtab === 1) {
				document.getElementById("num_operator").value = sim2;
			}
		}
		else {
			auto.style.display="inline";
			manual.style.display="none";
		}
	}

	function add_value(id, value){
		var e = document.getElementById(id);
		e.value = value;
	}
	function start_dmn(){
		XHR.get('<%=luci.dispatcher.build_url("admin", "status", "start_dmn")%>', null,
			function(x)
			{

			}
		)
	}

	function connect_network_manualy(simNum, mode){
		var value = document.getElementById('num_operator');
		if (value.value){
			connect_network(value.value, simNum, mode);
		}
		else{
			alert("<%=translate('Operator code field is empty!')%>");
		}
	}

	function connect_automatic(simNum){
		var connect = document.getElementById('applyConnection');
		var status = document.getElementById('cbi-apply-system-status');
		var e = document.getElementById("connection_mode");
		var mode = e.options[e.selectedIndex].text;
		if (connect ){
			connect.style.display="inline";
		}
		var activeSim= "<%=sim_use %>";
		var me = document.getElementById("message");
		e = document.getElementById("curoper");
		disable_pointer_events();
		XHR.get('<%=luci.dispatcher.build_url("admin", "status", "auto_select")%>', { numeric: SIMtab, active: activeSim },
			function(x, data)
			{
				if (manualintv) {
					clearInterval(manualintv);
				}

				manualintv = setInterval(function() {
					XHR.get('<%=luci.dispatcher.build_url("admin", "status", "connect_rsp")%>', null,
						function(x, data) {
							if (!data || data == "running") {
								return;
							}

							clearInterval(manualintv);
							connect.style.display="none";

							if (data.match("^(registered)")) {
								<%operator = luci.util.trim(luci.sys.exec("gsmctl -o")) or "N/A"
								if operator == "" then
									operator = "N/A"
								elseif operator == "gsmctl.c: error parsing output" then
									operator = "N/A"
								elseif operator == "gsmctl error: parsing output" then
									operator = "N/A"
								elseif operator == "gsmctl error: sim failure" then
									operator = "N/A"
								end%>
								e.innerHTML = '<%=operator%>';
								me.innerHTML = '<div id="succ_message" class="alert-message success" ><%=translate("Registered")%></div>';
							}
							else if (data == "unregistered" || data == "denied") {
								e.innerHTML = 'N/A';
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Can\\'t find a valid operator")%></div>';
							}
							else if (data == "gsmd not running") {
								me.innterHTML = '<div id="err_message" class="alert-message error" ><%=translate("Gsmd not running")%></div>';
							}
							else if (data == "Timeout.") {
									me.innerHTML = '<div id ="err_message" class="alert-message error"><%=translate("Timeout")%></div>'
							}
							else {
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Unknown message returned")%></div>';
							}

							connect.style.display="none";
							if( SIMtab == "0" ){
								sim1mode = mode;
								sim1="";
							}
							else{
								sim2mode = mode;
								sim2="";
							}
							//console.log("activeSim: "+activeSim+"sim1mode:"+sim1mode+"sim1:"+sim1+"mode:"+mode);
							enable_pointer_events();
						}
					);
				}.bind(this), 2000);
			}
		)
	}

	function connect_network(num, simNum){
		var connect = document.getElementById('applyConnection');
		var status = document.getElementById('cbi-apply-system-status');
		if (connect ){
			connect.style.display="inline";
		}
		var activeSim= "<%=sim_use %>";
		var e = document.getElementById("connection_mode");
		var mode = e.options[e.selectedIndex].text;
		var me = document.getElementById("message");
		e = document.getElementById("curoper");
		if (mode_scan == "1")
			mode = "Manual";
		disable_pointer_events();
		//console.log("num: "+num+"tab:"+SIMtab+"active sim:"+activeSim+"mode:"+mode+" Mode scan:"+mode_scan);
		XHR.get('<%=luci.dispatcher.build_url("admin", "status", "connect_network")%>', {numeric: num, numerictab: SIMtab, active: activeSim, oper_mode: mode},
			function(x, data)
			{
				if (manualintv) {
					clearInterval(manualintv);
				}

				manualintv = setInterval(function() {
					XHR.get('<%=luci.dispatcher.build_url("admin", "status", "connect_rsp")%>', {numeric: num, oper_mode: mode},
						function(x, data) {
							if (!data || data == "running") {
								return;
							}

							clearInterval(manualintv);
							connect.style.display="none";

							if (data.match("^(registered)")) {
								<%operator = luci.util.trim(luci.sys.exec("gsmctl -o")) or "N/A"
								if operator == "" then
									operator = "N/A"
								elseif operator == "gsmctl.c: error parsing output" then
									operator = "N/A"
								elseif operator == "gsmctl error: parsing output" then
									operator = "N/A"
								elseif operator == "gsmctl error: sim failure" then
									operator = "N/A"
								end%>

								e.innerHTML = '<%=operator%>';
								if (data.includes("automatic")) {
									me.innerHTML = '<div id="succ_message" class="alert-message success" ><%=translate("Registration to selected operator failed, registered to automatic")%></div>';
								}
								else {
									me.innerHTML = '<div id="succ_message" class="alert-message success" ><%=translate("Registered to selected operator")%></div>';
								}
							}
							else if (data == "not supported") {
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Currently not supported by module")%></div>';
							}
							else if (data == "unregistered" || data == "denied") {
								e.innerHTML = 'N/A';
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Can\\'t register to selected operator")%></div>';
							}
							else if (data == "Timeout.") {
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Timeout")%></div>';
							}
							else if (data == "gsmd not running") {
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Gsmd not running")%></div>';
							}
							else if (data == "NAN") {
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Operator number can only contain digits!")%></div>';
							}
							else {
								me.innerHTML = '<div id="err_message" class="alert-message error" ><%=translate("Unknown message returned")%></div>';
							}

							//e = document.getElementById("connection_mode");
							//e.value=mode;
							hide_element("manual");
							if( SIMtab == "0" ){
								sim1mode = mode;
								sim1 = num;
							}
							else{
								sim2mode = mode;
								sim2 = num;
							}
							//console.log("activeSim: "+activeSim+"sim1mode:"+sim1mode+"sim1:"+sim1+"mode:"+mode);
							enable_pointer_events();
							//console.log("mode scan 2: "+mode_scan);
							if (mode == "Manual")
								document.getElementById("manual_connection").selected="selected";
							else
								document.getElementById("manual_auto_connection").selected="selected";
							mode_scan = 0;
						}
					);
				}.bind(this), 2000);
			}
		)
	}

	function periodic_get(action){
		if (action == "start"){
			var me = document.getElementById("message");
			me.innerHTML = "";
			if (confirm("<%=translate('You will lose current mobile connection. Are you sure you want to scan for operators?')%>")){
				if (interval){
					clearInterval(interval);
				}
				if(SIMtab == 0){
					document.getElementById("sim2secondary").className = "custom_link_active";
					document.getElementById("sim2secondary").onclick = function() {};
				}
				else{
					document.getElementById("sim1primary").className = "custom_link_active";
					document.getElementById("sim1primary").onclick = function() {};
				}
				document.getElementById("scanBtn").disabled = true;
				document.getElementById("scanBtn").style = "font-weight: normal; margin-right: 20px; color: #B8B8B8; cursor: default; ";
				document.getElementById("selectBtn").disabled = true;
				document.getElementById("selectBtn").style = "cursor: default; color: #B8B8B8; ";
				document.getElementById("automatic").disabled = true;
				document.getElementById("automatic").style = "cursor: default; color: #B8B8B8; ";
				var output = document.getElementById('diag-rc-output');
				if (output) {
					output.innerHTML =
					'<img src="<%=resource%>/icons/loading.gif" alt="<%:Loading%>" style="vertical-align:middle" /> ' +
					'<%:Collecting data...%>';
				}
				start_dmn();
				e = document.getElementById("curoper");
				e.innerHTML = 'N/A';
				setTimeout(function(){operators_get();}, 2000);
				interval = setInterval(operators_get, 10000);
			}
		}
		else if (action == "stop") {

			clearInterval(interval);
				if(SIMtab == 0){
					document.getElementById("sim2secondary").className = "custom_link";
					document.getElementById("sim2secondary").onclick = function() { set_active(this); SIMtab=0};
				}
				else{
					document.getElementById("sim1primary").className = "custom_link";
					document.getElementById("sim1primary").onclick = function() { set_active(this); SIMtab=0};
				}
				document.getElementById("scanBtn").disabled = false;
				document.getElementById("scanBtn").style = "font-weight: normal; margin-right: 20px; cursor: pointer; ";
				document.getElementById("selectBtn").disabled = false;
				document.getElementById("selectBtn").style = "cursor: pointer; ";
				document.getElementById("automatic").disabled = false;
				document.getElementById("automatic").style = "cursor: pointer; ";
		}
	}

	function operators_get()
	{

		var legend = document.getElementById('diag-rc-legend');
		var output = document.getElementById('diag-rc-output');

		if (legend && output )
		{

			legend.parentNode.style.display = 'block';
			//legend.style.display = 'inline';

			XHR.get('<%=luci.dispatcher.build_url("admin", "status", "operators")%>', null,
				function(x, data)
				{
					var status = ["Unknown", "Available", "Available", "Forbidden"];
					var net_ac_type = ["2G", "2G", "3G", "2G", "3G", "3G", "3G", "4G"];
					var position = 1;
					if (data == "timeout"){
						periodic_get("stop");
						legend.style.display = 'none';
						output.innerHTML = '<span class="error"><%=translate("Request time out!")%></span>';
						data = null;
					}
					else if (data == "error") {
						periodic_get("stop");
						legend.style.display = 'none';
						output.innerHTML = '<span class="error"><%=translate("Scan error!")%></span>';
					}
 					else if (data && data != "wait") {
						periodic_get("stop");
						var s = '<tr style=" background-color: #F5F5F5; "> <td onmouseover="ShowHint(this, "<%=translate('Show if network is aviable')%>")" onmouseout="HideHint(this)"><%=translate("Status")%></td>';
						for (var a=0; a < data[data.length-1].length; a++){
							if (data[data.length-1][a] == "0"){
								s += '<td onmouseover="ShowHint(this, "<%=translate('Network operator\\\'s name')%>")" onmouseout="HideHint(this)"><%=translate("Operator name")%></td>';
								position += 1;
							}
							if (data[data.length-1][a] == "1"){
								s += '<td onmouseover="ShowHint(this, "<%=translate('Shorter name of operator')%>")" onmouseout="HideHint(this)"><%=translate("Short name")%></td>';
								position += 1;
							}
							if (data[data.length-1][a] == "2"){
								s += '<td onmouseover="ShowHint(this, "<%=translate('Numeric name of operator')%>")" onmouseout="HideHint(this)"><%=translate("Numeric name")%></td>';
								position += 1;
							}
						}
						s += '<td onmouseover="ShowHint(this, "<%=translate('Type of access that network has')%>")" onmouseout="HideHint(this)"><%=translate("Network access type")%></td>';
						s += '<td onmouseover="ShowHint(this, "<%=translate('Choose to which network to connect')%>")" onmouseout="HideHint(this)"><%=translate("Connect")%></td> </tr>';
						//alert(x.responseText);
						if (data && data.length > 2)
						{
							legend.style.display = 'none';
							for (var i=0; i < data.length - 2; i++){
								if (i % 2 == 1){
									s += '<tr style = "background-color: #F5F5F5;">';
								}
								else{
									s += '<tr>';
								}
								for (var n=0; n < data[i].length; n++){
									if (n == 0 ){
									s += String.format('<td>%s</td>', status[data[i][n]]);
									}
									else if (n == position){
										s += String.format('<td>%s', net_ac_type[data[i][n]]);
										for (var t=i+1; t < data.length - 2; t++){
											if(data[i][position-1] == data[t][position-1]){
												s += String.format('/%s', net_ac_type[data[t][position]]);
												data.splice(t,1);
												--t;
											}
										}
										s += '</td>';
									}
									else {
										s += String.format('<td>%s</td>', data[i][n]);
									}
								}
								s += String.format('<td><input class="cbi-button cbi-button-save" style="float:left;" type="button" onclick="mode_scan=1; connect_network(%s); add_value(\'num_operator\', %s) " value="<%=translate('Connect')%>"></td></tr>',data[i][position-1], data[i][position-1]);
							}
							//alert(s);
							output.innerHTML = String.format('%s', s);
						}
						else
						{
							periodic_get("stop");
							legend.style.display = 'none';
							output.innerHTML = '<span class="error"><%=translate("No operators!")%></span>';
						}
					}
				}
			);
		}
	}
	function disable_pointer_events()
	{
		document.getElementById("sim-selection-tab").style.pointerEvents = "none";
		document.getElementById("selection-form").style.pointerEvents = "none";
	}
	function enable_pointer_events()
	{
		document.getElementById("sim-selection-tab").style.pointerEvents = "auto";
		document.getElementById("selection-form").style.pointerEvents = "auto";
	}

	function validate_select()
	{
		var field = document.getElementById("num_operator").value;
		if (Number(field)) {
			if (field > 1 && field < 999999) {
				connect_network_manualy(SIMtab);
			} else {
				alert("Incorrect operator code format");
			}

		} else {
			alert("Incorrect operator code format");
		}
	}
//]]></script>

<form method="post" action="<%=pcdata(luci.http.getenv("REQUEST_URI"))%>">
	<div class="cbi-map">
	<div id="message"></div>
	<div style="height: 20px;">
		<h2 style="width:49%; float:left;"><a id="content" name="content"><%=translate("Network Operators")%></a></h2>
		<fieldset style="width:49%; float:right;" class="section" id="cbi-apply-system">
			<div class="applyChanges" id="applyConnection" style="display: none;">
				<span id="cbi-apply-system-status"><%=translate("Registering...")%></span>
				<img src="/luci-static/resources/icons/loading.gif" alt="Loading">
			</div>
		</fieldset>
	</div>

		<fieldset style="width:100%;">
			 <legend><%=translate("Current SIM")%></legend>
				 <table width="100%" class="cbi-section-table">
<!-- 					<tr><td width="50%"><span onmouseover="ShowHint(this, '<%=translate('Which SIM card is currently used to connect to your GSM (Global System for Mobile communication) carrier network')%>')" onmouseout="HideHint(this)"><%=translate("SIM card in use") %></span></td><td><%=sim_use %></td></tr> -->
					<tr><td width="50%"><span onmouseover="ShowHint(this, '<%=translate('ID of your GSM (Global System for Mobile communication) network carrier')%>')" onmouseout="HideHint(this)"><%=translate("Current operator")%></span></td><td id="curoper"><%=operator%></td></tr>
				 </table>
			<div style="float: left;">
				<input type="button" id="scanBtn"  value="<%=translate('Scan for operators')%>" class="cbi-button cbi-button-apply" onclick=" periodic_get('start')" style="font-weight: normal; margin-right: 20px;"/>
			</div>
		</fieldset>
		<fieldset>
			<legend><%=translate("Settings")%></legend>
		</fieldset>
		<fieldset>
			<ul id="sim-selection-tab" class="cbi-tabmenu">
				<li id="tab.simcard.sim1.primarytab" <% if sim_use == "SIM 1" then %> class="cbi-tab active" <% else %> class="cbi-tab-disabled" <% end %> >
					<a id="sim1primary" <% if sim_use == "SIM 1" then %> class="custom_link_active" <% else %> class="custom_link" <% end %> onclick="set_active(this); SIMtab=0 ">SIM 1</a>
				</li>
				<li id="tab.simcard.sim1.secondarytab" <% if sim_use == "SIM 2" then %> class="cbi-tab active" <% else %> class="cbi-tab-disabled" <% end %> >
					<a id="sim2secondary" <% if sim_use == "SIM 2" then %> class="custom_link" <% else %> class="custom_link_active" <% end %>  onclick="set_active(this); SIMtab=1 ">SIM 2</a>

				</li>
			</ul>
		</fieldset>
		<fieldset class="cbi-section" style="display:none">

			<legend id="diag-rc-legend"></legend>
			<table id="diag-rc-output">

			</table>
		</fieldset>
		<fieldset class="cbi-section">
			<div id="selection-form" class="cbi-value">
				<% local num = uci:get("simcard", uci_sim_use, "numeric") %>
				<% local man_auto = uci:get("simcard", uci_sim_use, "mode") %>
				<div class="cbi-value-field" style="margin: 0px;">
					<div class="cbi-value-field" style="margin: 0px;">
						<div style="float: left; margin-top:8px">
								<span>
									<%=translate('Connection mode :')%>
								</span>
						</div>
					</div>
					<div style="float: left; margin-left: 10px; margin-right: 10px;">
						<select class="cbi-input-select" onchange="hide_element(this.value)" id="connection_mode"  size="1">
							<option id="auto_connection" value="<%=translate('auto')%>"
							<% if not num then %>
							selected = "selected"
							<% end %>
							>Auto</option>
							<option id="manual_auto_connection" value="<%=translate('manual/auto')%>"
							<% if  num and man_auto=="Manual-Auto" then %>
							selected = "selected"
							<% end %>
							>Manual-Auto</option>
							<option id="manual_connection" value="<%=translate('manual')%>"
							<% if  num and not man_auto then %>
							selected = "selected"
							<% end %>
							>Manual</option>


						</select>
					</div>
					<div id="manual_con" style="float: left; width: 330px;
					<% if num then %>
							display: inline;"
						<% else %>
							display: none;"
						<% end %>
					>
						<label  class="cbi-value-title" for="cbid.network.ppp.apn" style="float: none;"  onmouseover="ShowHint(this, '<%=translate('Code of operator that you want to connect')%>')" onmouseout="HideHint(this)"><%=translate("Operator code")%></label>
						<input type="text" class="cbi-input-text" id="num_operator" style="width: 100px;" <%=ifattr(num, "value", num)%> >
							<input type="button" id="selectBtn" value="<%=translate('Select')%>" class="cbi-button cbi-button-apply" onclick="validate_select()">
				</div>

					<div id="auto_con" style="float: left;
					<% if not num then %>
							display: inline;"
						<% else %>
							display: none;"
						<% end %>>
						<input  type="button" value="<%=translate('Select')%>" class="cbi-button cbi-button-apply" id="automatic" onclick="connect_automatic(SIMtab); add_value('num_operator', '')">
					</div>

				</div>
			</div>
			<br style="clear:both" /><br />
		</fieldset>
	</div>

</form>
<%+footer%>
