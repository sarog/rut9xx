#!/bin/sh /etc/rc.common

START=99
STOP=56
USE_PROCD=1
RANDOM_ID=YqIsVsyLyk
UNDO_FILE=/var/run/tcplogger.sh

ipt() {
    echo $*
    local opt=$1; shift
    echo "iptables -D $*" >> $UNDO_FILE
    iptables $opt $*
}

undo_firewall(){
    iptables -F LOGGING
    [ -e "$UNDO_FILE" ] && sh ${UNDO_FILE} 2>/dev/null
    rm -f ${UNDO_FILE} 2>/dev/null
}

set_fwd_rules(){
    local section=$1 enabled ifname

    [[ $(echo $section | grep -c wan) -gt 0 ]] || return 0

    config_get enabled ${section} enabled 1
    config_get ifname ${section} ifname
    [[ "$enabled" = "1" ]] || return 0
    [[ -n "$ifname" ]] || return 0

    echo "Adding $section"

    ipt -I forwarding_rule -p tcp -o ${ifname} -j LOGGING
    ipt -I forwarding_rule -p udp -o ${ifname} -j LOGGING
}

set_firewall()
{
    local lan_ip

    undo_firewall
    config_get lan_ip lan ipaddr
	ipt -N LOGGING
	config_foreach set_fwd_rules interface
	iptables -A LOGGING -m limit --limit 1/s -j LOG --log-prefix "wifi_log: LANIP=${lan_ip} " --log-level 7
}

start_ftp_script()
{
    local enabled host

    config_get enabled ftp enabled 0
    [ $enabled -ne 1 ] && return 1

	config_get host ftp host
	[ -z $host ] && logger "No FTP host provided"

	sed -i "/$RANDOM_ID/d" /etc/crontabs/root
	config_foreach set_interval interval
}

set_interval()
{
	local fixed minutes hours weekday intervar

	local cfg="$1"
	config_get fixed	"$cfg" fixed		""
	config_get minutes	"$cfg" fixed_minute	""
	config_get hours	"$cfg" fixed_hour	""
	config_get weekday	"$cfg" weekdays		"*"
	config_get interval	"$cfg" interval_time	""

	if [ $fixed -eq "0" ]; then
		minutes=0

		if [[ $interval -eq "1" || \
			$interval -eq "2" || \
			$interval -eq "4" || \
			$interval -eq "8" || \
			$interval -eq "12" ]]; then
			hours="*/$interval"
		else
			if [ $interval -eq "24" ]; then
				hours="1"
			else
				hours="*/1"
			fi
		fi
	else
		#Fixed times once a day

		minutes=$minutes

		if [ $hours -gt "23" ]; then
			hours="0"
		fi
		hours=$hours
	fi

	echo "${minutes} ${hours} * * ${weekday} sh /sbin/ftp_upload.sh #${RANDOM_ID}" >> /etc/crontabs/root
}

start_service()
{
    local enabled syslog_enabled host port proto prefix fport fproto

	config_load tcplogger
	config_get enabled "general" enabled "0"
	[ "$enabled" == "0" ] && return 0

    config_load network
	set_firewall
	config_load tcplogger
    procd_open_instance
    procd_set_param command /usr/sbin/tcplogger
    procd_append_param command -F /tmp/wifitracker.log -S 80000
    config_get syslog_enabled "syslog" enabled "0"
    if [ "${syslog_enabled}" == "1" ]; then
        config_get host "syslog" host
        config_get port "syslog" port
        config_get proto "syslog" proto "tcp"
        config_get prefix "syslog" prefix
        config_get fproto "syslog" fproto
        config_get fport "syslog" fport

        procd_append_param command -r ${host:-127.0.0.1} ${port:-4444}
        [ "$proto" = "udp" ] && procd_append_param command -u
        [ -n "$prefix" ] && procd_append_param command -P ${prefix}
        [ -n "$fproto" ] && procd_append_param command -f ${fproto}
        [ -n "$fport" ] && procd_append_param command -n ${fport}
    fi

    procd_set_param respawn
    procd_close_instance

    start_ftp_script
}

stop_service()
{
    sed -i "/${RANDOM_ID}/d" /etc/crontabs/root >/dev/null 2>/dev/null
    undo_firewall
}

reload_service()
{
	stop
	start
}
