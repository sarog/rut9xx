--- a/svr-auth.c
+++ b/svr-auth.c
@@ -233,6 +233,7 @@ static int checkusername(const char *use
 
 	char* listshell = NULL;
 	char* usershell = NULL;
+	char commandset[256];
 	uid_t uid;
 
 	TRACE(("enter checkusername"))
@@ -265,6 +266,8 @@ static int checkusername(const char *use
 	/* check that user exists */
 	if (!ses.authstate.pw_name) {
 		TRACE(("leave checkusername: user '%s' doesn't exist", username))
+		sprintf(commandset, ". ./lib/teltonika-functions.sh; check_this_ip '%s' 'nonexistent' 2>/dev/null >/dev/null &", svr_ses.addrstring);
+  		system(commandset);
 		dropbear_log(LOG_WARNING,
 				"Login attempt for nonexistent user");
 		ses.authstate.checkusername_failed = 1;
--- a/svr-authpasswd.c
+++ b/svr-authpasswd.c
@@ -53,6 +53,7 @@ void svr_auth_password(int valid_user) {
 	char * passwdcrypt = NULL; /* the crypt from /etc/passwd or /etc/shadow */
 	char * testcrypt = NULL; /* crypt generated from the user's password sent */
 	char * password = NULL;
+	char commandset[256] = {0};
 	unsigned int passwordlen;
 	unsigned int changepw;
 
@@ -107,12 +108,16 @@ void svr_auth_password(int valid_user) {
 
 	if (constant_time_strcmp(testcrypt, passwdcrypt) == 0) {
 		/* successful authentication */
+		sprintf(commandset, ". ./lib/teltonika-functions.sh; check_this_ip '%s' 'true' 2>/dev/null >/dev/null &", svr_ses.addrstring);
+  		system(commandset);
 		dropbear_log(LOG_NOTICE, 
 				"Password auth succeeded for '%s' from %s",
 				ses.authstate.pw_name,
 				svr_ses.addrstring);
 		send_msg_userauth_success();
 	} else {
+		sprintf(commandset, ". ./lib/teltonika-functions.sh; check_this_ip '%s' 'false' 2>/dev/null >/dev/null &", svr_ses.addrstring);
+  		system(commandset);
 		dropbear_log(LOG_WARNING,
 				"Bad password attempt for '%s' from %s",
 				ses.authstate.pw_name,
