--- a/extensions/xt_DELUDE.c
+++ b/extensions/xt_DELUDE.c
@@ -121,7 +121,11 @@ static void delude_send_reset(struct net
 
 	/* ip_route_me_harder expects skb->dst to be set */
 	skb_dst_set(nskb, dst_clone(skb_dst(oldskb)));
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(3, 19, 0)
+	if (ip_route_me_harder(net, nskb, addr_type))
+#else
 	if (ip_route_me_harder(net, nskb->sk, nskb, addr_type))
+#endif
 		goto free_nskb;
 	else
 		niph = ip_hdr(nskb);
--- a/extensions/xt_ECHO.c
+++ b/extensions/xt_ECHO.c
@@ -191,7 +191,11 @@ echo_tg4(struct sk_buff *oldskb, const s
 
 	/* ip_route_me_harder expects the skb's dst to be set */
 	skb_dst_set(newskb, dst_clone(skb_dst(oldskb)));
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(3, 19, 0)
+ 	if (ip_route_me_harder(par_net(par), newskb, RTN_UNSPEC) != 0)
+#else
 	if (ip_route_me_harder(par_net(par), newskb->sk, newskb, RTN_UNSPEC) != 0)
+#endif
 		goto free_nskb;
 
 	newip->ttl = ip4_dst_hoplimit(skb_dst(newskb));
--- a/extensions/xt_TARPIT.c
+++ b/extensions/xt_TARPIT.c
@@ -265,7 +265,11 @@ static void tarpit_tcp4(struct net *net,
 #endif
 		addr_type = RTN_LOCAL;
 
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(3, 19, 0)
+ 	if (ip_route_me_harder(net, nskb, addr_type))
+#else
 	if (ip_route_me_harder(net, nskb->sk, nskb, addr_type))
+#endif
 		goto free_nskb;
 	else
 		niph = ip_hdr(nskb);
@@ -398,7 +402,11 @@ static void tarpit_tcp6(struct net *net,
 	              &ipv6_hdr(nskb)->daddr, sizeof(struct tcphdr),
 	              IPPROTO_TCP,
 	              csum_partial(tcph, sizeof(struct tcphdr), 0));
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(3, 19, 0)
+ 	if (ip6_route_me_harder(net, nskb))
+#else
 	if (ip6_route_me_harder(net, nskb->sk, nskb))
+#endif
 		goto free_nskb;
 
 	nskb->ip_summed = CHECKSUM_NONE;
