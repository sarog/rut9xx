<%
local uci = require "luci.model.uci".cursor()
local ds = require "luci.dispatcher"
require "teltonika_lua_functions"
%>
<%+header%>
<%
enabled=luci.http.formvalue("cbid.network.enabled")
wan_as_lan = 0

uci:foreach("network", "interface", function(l)
	type = string.sub(l[".name"], 1, 3)
	if type == "lan" then
		if string.match(l.ifname, "eth1") then
			wan_as_lan = 1
		end
	end
end	)

function reset_lan()
	uci:foreach("network", "interface", function(l)
		type = string.sub(l[".name"], 1, 3)
		if type == "lan" then
			if l[".name"] == "lan" then
				new_ifname="eth0 tap0"
				uci:set("network",l[".name"],"disabled","0")
			else
				new_ifname="br-lan"
				uci:delete("network",l[".name"],"type")
				uci:set("network",l[".name"],"disabled","1")
			end
			if string.match(l.ifname, "eth1") then
				new_ifname=new_ifname.." eth1"
			end
			uci:set("network",l[".name"],"ifname",new_ifname)
		end
	end	)
end

if luci.http.formvalue("cbi.network.add") then
		for i=1, 16 do
			a=0
			b=0
			uci:foreach("network", "switch_vlan", function(sec)
				if tonumber(i) == tonumber(sec.vlan) then
					a=1
				end
				if tonumber(i) == tonumber(sec.vid) then
					b=1
				end
			end	)
			if a==0 then
				if vlan == nil then
					vlan=i
				end
			end
			if b==0 then
				if vid == nil then
					vid=i
				end
			end
			if vid and vlan then
			i=17
			end
		end
		aa = uci:add("network","switch_vlan")
		uci:set("network",aa,"device","switch0")
		uci:set("network",aa,"vlan",vlan)
		uci:set("network",aa,"vid",vid)
		uci:set("network",aa,"ports","0t")
		uci:commit("network")
elseif luci.http.formvalue("cbi.apply") then
	if enabled == "tag" or enabled == "port" then
		if enabled == "tag" then
			uci:foreach("network", "switch", function(l)
				uci:set("network",l[".name"],"enable_vlan","0")
				uci:set("network",l[".name"],"_vlan","tag")
			end	)
		elseif enabled == "port" then
			uci:foreach("network", "switch", function(l)
				uci:set("network",l[".name"],"enable_vlan","1")
				uci:set("network",l[".name"],"_vlan","port")
			end	)
		end
		reset_lan()

		local vlan_count = 1
		uci:foreach("network", "switch_vlan", function(v)

			vlan_vid=luci.http.formvalue("cbid.network."..v[".name"]..".vid")
			uci:set("network",v[".name"],"vid",vlan_vid)
			uci:set("network",v[".name"],"vlan", vlan_count)
			vlan_count=vlan_count+1

			if enabled == "port" then
				vlan_ports="0t"
				for i=1, 4 do
					port=luci.http.formvalue("cbid.network."..v[".name"].."."..i)
					if port == "u" then
						vlan_ports=vlan_ports.." "..i
					elseif port == "t" then
						vlan_ports=vlan_ports.." "..i.."t"
					end
				end
				uci:set("network",v[".name"],"ports",vlan_ports)
			end

			vlan_lan=luci.http.formvalue("cbid.network."..v[".name"]..".lan")
			wan_port=luci.http.formvalue("cbid.network."..v[".name"]..".1")
			uci:foreach("network", "interface", function(l)
				type = string.sub(l[".name"], 1, 3)
				if type == "lan" then
					if l[".name"] == vlan_lan then
						if tonumber(vlan_vid) == 0 then
							ifname2="eth0"
							if wan_port ~= "n" and wan_port ~= nil then
								ifname2=ifname2.." eth1"
							end
						else
							ifname2="eth0."..vlan_vid
							if wan_port ~= "n" and wan_port ~= nil then
								if wan_port == "t" then
									ifname2=ifname2.." eth1."..vlan_vid
								else
									ifname2=ifname2.." eth1"
								end
								if wan_port == "u" then
									rm_wan_from_main_lan = uci:get("network", "lan", "ifname")
									rm_wan_from_main_lan = string.gsub(rm_wan_from_main_lan, "% eth1", "")
									uci:set("network", "lan", "ifname", rm_wan_from_main_lan)
								end
							end
						end
						if string.match(l.ifname, "tap0") then
							ifname2=ifname2.." tap0"
						end
						uci:set("network",l[".name"],"ifname",ifname2)
						uci:set("network",l[".name"],"type","bridge")
						uci:set("network",l[".name"],"disabled","0")
					end
				end
			end	)

			uci:foreach("wireless", "wifi-iface", function(w)
				vlan_wifi=luci.http.formvalue("cbid.network."..v[".name"].."."..w[".name"]..".wifi")
				if vlan_wifi then
					uci:set("wireless",w[".name"],"network",vlan_lan)
				end
			end	)
		end	)
	elseif enabled == "disabled" then
		reset_lan()
		uci:foreach("network", "switch", function(l)
			uci:set("network",l[".name"],"enable_vlan","0")
			uci:set("network",l[".name"],"_vlan","disabled")
		end	)
		uci:foreach("wireless", "wifi-iface", function(w)
			uci:set("wireless",w[".name"],"network","lan")
		end	)
	end
	uci:commit("network")
	uci:commit("wireless")
	luci.sys.call("/sbin/luci-reload >/dev/null 2>&1 &")
else
	vid=0
	delete=0
	uci:foreach("network", "switch_vlan", function(sec)
		wan_port=luci.http.formvalue("cbid.network."..sec[".name"]..".1")
		if luci.http.formvalue("cbi.network.delete."..sec[".name"]) then
			vid="eth0."..sec.vid
			uci:foreach("network", "interface", function(b)
				if b.ifname == vid then
					if b[".name"] == "lan" then
						ifname = "eth0 tap0"
						if wan_port ~= "n" and wan_port ~= nil and string.match(b.ifname, "eth1") then
							ifname = ifname.." eth1"
						end
						uci:set("network",b[".name"],"ifname", ifname)
					else
						ifname = "br-lan"
						if string.match(b.ifname, "eth1") then
							ifname = ifname.." eth1"
						end
						uci:set("network",b[".name"],"ifname", ifname)
					end
				end
			end	)
			uci:delete("network",sec[".name"])
			uci:commit("network")
		end
	end	)
end

function check_ports(ports)
	port={}
	port[1]="n"
	port[2]="n"
	port[3]="n"
	port[4]="n"
	a={}
	s=1
	if ports then
		for i = 1, #ports do
			local c = ports:sub(i,i)
			if c and c~=nil and tonumber(c) then
				if tonumber(c)>0 and tonumber(c)<5 then
					port[tonumber(c)]="u"
					i=i+1
					local b = ports:sub(i,i)
					if b=="t" then
						port[tonumber(c)]="t"
					end
				end
			end
		end
	end
	return port
end

function check_lan(lans, vid ,vlan)
	if vid then
		id = vid
	else
		id = vlan
	end
	local return_value=""
	--if #lan >1 then
		for i, l in ipairs(lan) do
			if tonumber(id) == 0 then
				if string.match(l.ifname, "eth0") and not string.match(l.ifname, "eth0%.") then
					return_value=l[".name"]
				end
			else
				if string.match(l.ifname, "eth0."..id) then
					return_value=l[".name"]
				end
			end
		end
	--else
		if return_value=="" then
			return_value="none"
		end
	--end
	return return_value
end
uci:foreach("network", "switch", function(l)
	enable_vlan = uci:get("network",l[".name"],"enable_vlan")
	vlan_enabled=l._vlan
end	)

if enabled then
	vlan_enabled=enabled
end

vlan = {}
uci:foreach("network", "switch_vlan", function(sec)
	vlan[#vlan+1]=sec
end	)

wifi = {}
uci:foreach("wireless", "wifi-iface", function(sec)
	if sec.mode == "ap" then
		sec.ssid = escapeHTML(sec.ssid)
		wifi[#wifi+1]=sec
	end
end	)

lan = {}
uci:foreach("network", "interface", function(sec)
	type = string.sub(sec[".name"], 1, 3)
	if type == "lan" then
		lan[#lan+1]=sec
	end
end	)

%>
<script>
var vlan = <%=luci.http.write_json(vlan)%>;
var lan = <%=luci.http.write_json(lan)%>;
var wifi = <%=luci.http.write_json(wifi)%>;

function port_change(id, config_id, port_nr) {
	var val = document.getElementById(id).value;
	if(val == "u"){
		for(var i=0; i<vlan.length;i++){
			if(vlan[i][".name"]!=config_id){
				e=document.getElementById("cbid.network."+vlan[i][".name"]+"."+port_nr)
				if(e.value=="u" || e.value=="t"){
					document.getElementById("cbid.network."+vlan[i][".name"]+"."+port_nr).value="n";
					error(2);
				}
			}
		}
	}else if(val == "t"){
		for(var i=0; i<vlan.length;i++){
			if(vlan[i][".name"]!=config_id){
				port_id = document.getElementById("cbid.network."+vlan[i][".name"]+"."+port_nr);
				if(port_id.value=="u"){
					port_id.value="n";
					error(3);
				}
			}
		}
	}
}

function vlan_id_change(id, config_id) {
	var val = document.getElementById(id);
	error_id=0;
	if(val){
		if(Number(val.value)<=4094 && Number(val.value)>=0 ){
			for(var i=0; i<vlan.length;i++){
				if(vlan[i][".name"]!=config_id){
					if(vlan[i].vid==val.value){
						error_id=1;
					}
				}
			}
		}else{
			error_id=2;
		}
	}
	if(error_id==1){
		val.className = "cbi-input-text";
		error(6);
		document.getElementById("cbi.apply").disabled=true;
	}else if(error_id==2){
		//error(7);
		val.className = "cbi-input-text cbi-input-invalid";
		document.getElementById("cbi.apply").disabled=true;
	}else{
		val.className = "cbi-input-text";
		//error(0);
		document.getElementById("cbi.apply").disabled=false;
	}
}

function enabled_change() {
	var val = document.getElementById("cbid.network.enabled");
	if(val){
		if (val.value=="disabled"){
			document.getElementById("cbi-network-switch_vlan").style.display = 'none';
		}else{
			document.getElementById("cbi-network-switch_vlan").style.display = '';
			if (val.value=="tag"){
				document.getElementById("cbi-ports").style.display = 'none';
				for(var i=1; i<=4;i++){
					document.getElementById("cbi-port-"+i).style.display = 'none';
					for(var a=0; a<vlan.length;a++){
						document.getElementById("cbi-network-port-"+vlan[a][".name"]+"-"+i).style.display = 'none';
					}
				}
			}else if(val.value=="port"){
				document.getElementById("cbi-ports").style.display = "";
				for(var i=1; i<=4;i++){
					document.getElementById("cbi-port-"+i).style.display = "";
					for(var a=0; a<vlan.length;a++){
						document.getElementById("cbi-network-port-"+vlan[a][".name"]+"-"+i).style.display = "";
					}
				}
			}
		}
	}
}


function wifi_change(id, config_id, wifi_id) {
	var val = document.getElementById(id).checked;
	if(val){
		for(var i=0; i<vlan.length;i++){
			if(vlan[i][".name"]!=config_id){
				wifi_check = document.getElementById("cbid.network."+vlan[i][".name"]+"."+wifi_id+".wifi");
				if(wifi_check.checked){
					wifi_check.checked=false;
					error(4);
				}
			}
		}
	}
}

function lan_wifi_check(id) {
	var error_id=0;
	var val = document.getElementById("cbid.network."+id+".lan");
	if(val && val.value==0 ){
		for(var i=0; i<wifi.length;i++){
			var wifi_check = document.getElementById("cbid.network."+id+"."+wifi[i][".name"]+".wifi");
			if(wifi_check.checked){
				wifi_check.checked=false;
				error_id=1;
			}
		}
	}
	if(error_id==1){
		error(8);
		wifi_check.checked=false;
	}
}

function lan_change(id, config_id) {
	var val = document.getElementById(id).value;
	if(val && val!="0"){
		for(var i=0; i<vlan.length;i++){
			if(vlan[i][".name"]!=config_id){
				lan_check = document.getElementById("cbid.network."+vlan[i][".name"]+".lan");
				if(lan_check.value==val && lan_check.value!="0"){
					lan_id=vlan[i][".name"];
					for(var i=0; i<lan.length;i++){
					var used_value=0
					for(var a=0; a<vlan.length;a++){
						lan_check = document.getElementById("cbid.network."+vlan[a][".name"]+".lan");
						if(lan[i][".name"]==lan_check.value){
							used_value=1;
							a=vlan.length;
						}
					}
					if(used_value==0){
						if(lan_id){
							document.getElementById("cbid.network."+lan_id+".lan").value=lan[i][".name"];
							i=lan.length;
							error(5);
						}
					}
				}
				}
			}
		}

	}
}

function error(id) {
	var error_element=document.getElementById("err_message");
	if(id>=1 && id<=8){
		document.getElementById("succ_message").className = "hidden";
		switch(id) {
			case 1:
				error_element.innerHTML = '<%=translate("Create new LAN network first")%>';
				break;
			case 2:
				error_element.innerHTML = '<%=translate("Untagged port can be assigned to only one VLAN")%>';
				break;
			case 3:
				error_element.innerHTML = '<%=translate("Tagged port can not be used together with untagged")%>';
				break;
			case 4:
				error_element.innerHTML = '<%=translate("Same wireless network can be assigned to only one VLAN")%>';
				break;
			case 5:
				error_element.innerHTML = '<%=translate("Same LAN network can be assigned to only one VLAN")%>';
				break;
			case 6:
				error_element.innerHTML = '<%=translate("Same VLAN ID can be assigned to only one VLAN")%>';
				break;
			case 7:
				error_element.innerHTML = '<%=translate("The maximum allowable VLAN ID 4094")%>';
				break;
			case 8:
				error_element.innerHTML = '<%=translate("Can not assigned wireless network when no LAN network selected")%>';
				break;
		}
		error_element.className = "alert-message error";
	}
	if(id==0){
		error_element.innerHTML = '';
		error_element.className = "hidden";
	}
}

function success(id) {
	if(id>=1 && id<=2){
		document.getElementById("err_message").className = "hidden";
		var error_element=document.getElementById("succ_message");
		switch(id) {
			case 1:
				error_element.innerHTML = "error vlan";
				break;
			case 2:
				error_element.innerHTML = "error 2";
				break;
		}
		error_element.className = "alert-message success";
	}
}
AddWindowOnLoadEvent(enabled_change);
</script>
<div id="spin-loader" class="applyChanges" style="display:none;">
	<span><%=translate("Please wait...")%></span>
	<img src="<%=resource%>/icons/loading.gif" alt="<%:Loading%>" />
</div>
<script>
	function spin_loader(interval) {
		document.getElementById("spin-loader").style.display='';
		setTimeout("document.getElementById('spin-loader').style.display='none'", interval);
	}
</script>
<form onsubmit="return cbi_validate_form(this, 'Some fields are invalid, cannot save values!')" onreset="return cbi_validate_reset(this)" enctype="multipart/form-data" action="<%=ds.build_url('admin/network/vlan/list/')%>" name="cbi" method="post">
	<div>
		<script src="/luci-static/resources/cbi.js" type="text/javascript"></script>
		<input type="hidden" value="1" name="cbi.submit">
		<input type="submit" class="hidden" value="Save">
	</div>

	<div id="err_message" class="hidden" ></div>
	<div class="hidden" id="succ_message"></div>

	<div id="cbi-network" class="cbi-map">
		<h2><a name="content" id="content"><%=translate("Virtual LAN")%></a></h2>
		<fieldset id="cbi-network-" class="cbi-section">
			<legend><%=translate("VLAN Functionality")%></legend>
			<div id="cbi-network-class_cbi-section-node">
				<div id="cbi-network-enable_vlan" class="cbi-value cbi-value-last">
					<label id="cbid.enable_vlan" class="cbi-value-title">
						<span onmouseout="HideHint(this)" onmouseover="ShowHint(this,'')"><%=translate("VLAN mode")%></span>
					</label>
					<div style="" class="cbi-value-field">
						<select size="1" name="cbid.network.enabled" id="cbid.network.enabled" onchange="error(0);enabled_change()" class="cbi-input-select">
							<option value="disabled" id="cbid.network.disabled" <%- if vlan_enabled == "disabled" then -%> selected <%- end -%> >Disabled</option>
							<option value="port" id="cbid.network.port" <%- if vlan_enabled == "port" then -%> selected <%- end -%> > Port based</option>
							<option value="tag" id="cbid.network.tag" <%- if vlan_enabled == "tag" then -%> selected <%- end -%> >Tag based</option>

						</select>
					</div>
				</div>
			</div>
		</fieldset>
<fieldset id="cbi-network-switch_vlan" class="cbi-section">
	<legend><%=translate("VLAN Networks List")%></legend>
<div class="cbi-section-descr"></div>
	<div class="cbi-section-node" id="vlan_list" >
		<table class="cbi-section-table">
			<tbody>
				<tr><th></th>
					<th id="cbi-ports" style=" border-left: 2px solid #ddd;" colspan="4">
						<center><%=translate("LAN ports")%></center>
					</th>
					<% if #wifi > 0 then -%>
						<th colspan="<%=#wifi%>" style=" border-left: 2px solid #ddd;">
							<center><%=translate("Wireless access points")%></center>
						</th>
					<%- end -%>
					<th style=" border-left: 2px solid #ddd;"></th><th></th>
				</tr>
				<tr class="cbi-section-table-titles">
					<th onmouseout="HideHint(this)" onmouseover="ShowHint(this, 'The maximum allowable VLAN ID 4094')" class="cbi-section-table-cell">VLAN ID</th>
					<th id="cbi-port-4" onmouseout="HideHint(this)" onmouseover="ShowHint(this, '')" class="cbi-section-table-cell" style=" border-left: 2px solid #ddd;"><center>1</center></th>
					<th id="cbi-port-3" onmouseout="HideHint(this)" onmouseover="ShowHint(this, '')" class="cbi-section-table-cell"><center>2</center></th>
					<th id="cbi-port-2" onmouseout="HideHint(this)" onmouseover="ShowHint(this, '')" class="cbi-section-table-cell"><center>3</center></th>
					<th id="cbi-port-1" onmouseout="HideHint(this)" onmouseover="ShowHint(this, <%- if wan_as_lan == 1 then -%> '' <%- else -%> 'To use 4th port please enable \'Use WAN as LAN\' option in LAN configuration' <%- end -%>)" class="cbi-section-table-cell" style=" border-right: 2px solid #ddd;"><center>4</center></th>
				<% if #wifi == 2 then
						wifi_string_length = 22
					elseif #wifi == 3 then
						wifi_string_length = 15
					elseif #wifi == 4 then
						wifi_string_length = 10
					else
						wifi_string_length = 40
					end
				for i, w in ipairs(wifi) do
					if string.len(w.ssid) > wifi_string_length then
						wifi_name=string.sub(w.ssid, 1, wifi_string_length).."..."
					else
						wifi_name=w.ssid
					end %>
					<th onmouseout="HideHint(this)" onmouseover="ShowHint(this, '<%=escapeHTML(w.ssid)%>')" class="cbi-section-table-cell" <%- if tonumber(i)==1 then -%> style="border-left: 2px solid #ddd;"<%- end -%>>
						<center><%=escapeHTML(wifi_name)%></center></th>
			<%- end -%>
					<th onmouseout="HideHint(this)" onmouseover="ShowHint(this, '')" class="cbi-section-table-cell" style=" border-left: 2px solid #ddd;">
						<center>LAN</center></th>
					<th class="cbi-section-table-cell">&nbsp;</th>
				</tr>

<%-	for vlan_i, k in ipairs(vlan) do -%>
				<tr id="cbi-network-<%=k[".name"]%>-vid" class="cbi-section-table-row">
					<td class="cbi-value-field">
						<div id="cbi-network-<%=k[".name"]%>-vid">
							<input type="text" value="<%- if k.vid then print(k.vid) else print(k.vlan) end %>" id="cbid.network.<%=k[".name"]%>.vid" name="cbid.network.<%=k[".name"]%>.vid" onchange="error(0);vlan_id_change(this.id,'<%=k[".name"]%>')" class="cbi-input-text" style="width:50px;">
						</div>
					</td>
				<%- port_a=check_ports(k.ports)
					for b=4, 1, -1 do -%>
					<td class="cbi-value-field" id="cbi-network-port-<%=k[".name"]%>-<%=b%>" <%- if b==4 then -%> style=" border-left: 2px solid #ddd;" <%- elseif b==1 then -%> style=" border-right: 2px solid #ddd;" <%- end -%> >
						<div id="cbi-network-<%=k[".name"]%>-<%=b%>">
							<center>
								<select size="1" <%- if b == 1 and wan_as_lan == 0 then -%> disabled="disabled" <%- end -%> name="cbid.network.<%=k[".name"]%>.<%=b%>" id="cbid.network.<%=k[".name"]%>.<%=b%>" onchange="error(0);port_change(this.id,'<%=k[".name"]%>','<%=b%>')" class="cbi-input-select">
									<%- if port_a[b]=="n" then -%>
										<option value="n" id="cbi-network-<%=k[".name"]%>-<%=b%>-" >Off</option>
									<%- else -%>
										<option selected value="n" id="cbi-network-<%=k[".name"]%>-<%=b%>-" >Off</option>
									<%- end -%>
									<option value="u" id="cbi-network-<%=k[".name"]%>-<%=b%>-u" <%- if port_a[b]=="u" then -%> selected<%- end -%>>On</option>
									<%- if k.vid ~= "0" then -%>
										<option value="t" id="cbi-network-<%=k[".name"]%>-<%=b%>1-t" <%- if port_a[b]=="t" then -%> selected<%- end -%>>Tagged</option>
									<%- end -%>
								</select>
							</center>
						</div>
					</td>
				<%- end
					lan_name=check_lan(lan, k.vid, k.vlan)
					lan_selected=0
					for i, w in ipairs(wifi) do -%>
						<td class="cbi-value-field" <%- if tonumber(i)==1 then -%> style="border-left: 2px solid #ddd;"<%- end -%>>
							<center>
								<input type="checkbox" value="1" name="cbid.network.<%=k[".name"]%>.<%=w[".name"]%>.wifi" id="cbid.network.<%=k[".name"]%>.<%=w[".name"]%>.wifi" onchange="error(0);wifi_change(this.id,'<%=k[".name"]%>','<%=w[".name"]%>');lan_wifi_check('<%=k[".name"]%>');" class="cbi-input-checkbox" <%- if lan_name == w.network then -%> checked <%- end -%> >
							</center>
						</td>
				<%- end -%>
					<td class="cbi-value-field" style=" border-left: 2px solid #ddd;">
						<div id="cbi-network-<%=k[".name"]%>-_lan">
							<center>
								<select size="1" name="cbid.network.<%=k[".name"]%>.lan" id="cbid.network.<%=k[".name"]%>.lan" onchange="error(0);lan_change(this.id,'<%=k[".name"]%>');lan_wifi_check('<%=k[".name"]%>');" class="cbi-input-select">
									<option value="0" id="cbi-network-<%=k[".name"]%>-lan=0"> None</option>
								<%- for i, l in ipairs(lan) do -%>
									<%- print(lan_name.." == "..l[".name"]) -%>
									<option value="<%=l[".name"]%>" id="cbi-network-<%=l[".name"]%>-_lan-lan" <%- if lan_name == l[".name"] then lan_selected=1 -%> selected <%- end -%> ><%=l[".name"]%></option>
								<%- end -%>
								</select>
							</center>
						</div>
					</td>
					<td class="cbi-section-table-cell">
						<%- --if tonumber(vlan_i)~=1 then
						-%>
							<input type="submit" title="Delete" alt="Delete" name="cbi.network.delete.<%=k[".name"]%>" onclick="spin_loader(5);" value="Delete" class="cbi-button cbi-button-remove">
						<%- --end
						-%>
					</td>
				</tr>
<%- end -%>
			</tbody>
		</table>

		<div class="cbi-section-create cbi-tblsection-create">
		<%- if #lan > #vlan then -%>
			<input type="hidden" name="cbi.network.vlan.num" value="<%=#vlan%>">
			<input type="submit" title="Add" name="cbi.network.add" value="Add" style="margin-left: 10px;" class="cbi-button cbi-button-add" onclick="spin_loader(5);">
		<%- else -%>
			<input type="button" title="Add" name="cbi.network.add" value="Add" style="margin-left: 10px;" class="cbi-button cbi-button-add" onclick="error(1);">
		<%- end -%>
		</div>
	</div>
</fieldset>
	</div>
	<div class="cbi-page-actions">
		<input type="submit" value="Save" name="cbi.apply" id="cbi.apply"  class="cbi-button cbi-button-apply" onclick="spin_loader(5);" >
		<script type="text/javascript">cbi_d_update();</script>
	</div>
</form>

<%+footer%>
