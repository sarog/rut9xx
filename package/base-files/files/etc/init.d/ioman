#!/bin/sh /etc/rc.common
# Copyright (C) 2014 Teltonika

GPIO_SCRIPT="/sbin/gpio.sh"
IO_FILE="/tmp/io_state"
USE_PROCD=1
START=99
STOP=99

check_type()
{
	config_get enabled "$1" "enabled" "0"
	config_get type "$1" "type"
	if [ "$type" == "analog" ] && [ "$enabled" == "1" ]; then
		k=$((k+1))
	fi
}

start_service() {
	in_out=`uci -q get hwinfo.hwinfo.in_out`
	if [ "$in_out" == "1" ]; then
		DIN1=$($GPIO_SCRIPT get DIN1)
		DIN2=$($GPIO_SCRIPT get DIN2)
		DIN3=$($GPIO_SCRIPT get DIN3)
		echo "DIN1=$DIN1" > "$IO_FILE"
        echo "DIN2=$DIN2" >> "$IO_FILE"
        echo "DIN3=$DIN3" >> "$IO_FILE"
    else
		DIN3=$($GPIO_SCRIPT get DIN3)
		echo "DIN3=$DIN3" > "$IO_FILE"
	fi

	k=0

	config_load ioman
	config_foreach check_type "rule"

	if [ "$k" != "0" ]; then
		killall check_analog
		sleep 5

		procd_open_instance check_analog
                procd_set_param respawn
		procd_set_param command check_analog
                procd_close_instance
		echo "slept5" > /tmp/log/ioman.init.log
		echo "if happened" >> /tmp/log/ioman.init.log
	elif [ "$k" == "0" ]; then
		killall check_analog
		echo "elif happened" > /tmp/log/ioman.init.log
	fi
}

reaload_service() {
	killall check_analog
	/usr/sbin/check_analog &
}

stop_service() {
	killall check_analog
}
